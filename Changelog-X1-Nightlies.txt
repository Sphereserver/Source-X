
---- 0.56d (eXperimental branch forked from 0.56d) --------------------------------------------------------------
---- 11/04/2016

10-04-2016, Coruja
- Changed: Food level won't decrease on GM chars anymore.
- [sphere_msgs.scp]: Removed messages 'npc_text_murd_*'.
- [sphere_speech.scp]: Moved hardcoded speech commands 'I must consider my sins', 'I resign from my guild' and 'I resign from my town' to scripts.
	IMPORTANT: It's HIGHLY recommended update this script, or these speech commands will stop working.

18-04-2016, XuN
- Removed TAG.OVERRIDE.MAXWEIGHT and added ModMaxWeight on it's place for Banks and Corpses.
- Fixed stackable items not checking maxweight on corpses.
- Removed all references to MEMORY_WAR_TARG since they are not needed anymore, targets are handled by 'Attacker' now.
- Added back old HitChance formula under CombatDamageEra = 0
- Updated checks on @NotoSend trigger: it will not check anymore if ARGN1 > NOTO_INVUL, so you can create custom notoriety.

19-04-2016, Coruja
- Fixed: Protection spell not working correctly if COMBAT_ELEMENTAL_ENGINE combat flag is disabled.


---- X1 (Milestone 1 opened)

14-05-2016, XuN
- Fixed: Pets not gaining Karma (it can be blocked through @KarmaChange trigger, no reason to stop it from the source).
- Fixed: Killing pets and/or bonded pets not giving karma (same reason as above).
- Fixed: Hits being canceled when going out of range and COMBAT_STAYINRANGE was enabled, it should happen when it is disabled.
- Fixed: Attack delay broken when COMBAT_PREHIT is disabled because of using as SetTimeOut animDelay instead of iSwingDelay.
- Fixed: Weird crash related to a change on CChar:OnTick()
	(Not really fixed, just reverted the code because I couldn't track what is exactly causing it and seems to happen when there are ~100 clients
	 online, so I'm not going to mess a lot with it, it's not cool to use 100 players to do tests :) ).
- Attempt to log and stop a crash related to the NetworkOutput.
- Fixed: NPC_FightMagery not correctly checking if the NPC can use magic skills and creating some infinite loops under certain circumstances.

15-05-2016, XuN
- Updated Fight_IsActive function with NPC's skills and one Attacker's check.
- Fixed: NPCs not ending combat when their target is far away from them and calling Attacker_Delete() @CombatDelete with argn=2 (Distance) to give control over it.
- Fixed: GUARD ME making pet following you instead of guarding you (Thanks Shamino).
- Fixed: NPCs being dumb before they reach their target.
- Updated a bit CChar::OnTick.

17-05-2016, Nolok
- Fixed: speech color for NPCs on Enhanced Clients being always "yellow". Achieved this by forcing (only for EC) system (0) talkmode instead of say (3).
	This workaround works only if the speech packet sent by Sphere is Unicode (instead of ASCII), so you'll need to set SAY_DEF_UNICODE in sphere_msgs.scp to 1.
- Added: SpeechColorOverride property (players only, R/W) to override client speech hue. (CHANGED in 01/11/2018)
	This will not affect Words of Power hue, you can use spell triggers for this (WOP hue on Enhanced Client will still be set by the client, regardless of the hue sent by the server).
	SpeechColorOverride = 52 (or 0x34), which is the default yellow hue for player speech, disables the override.
	Remember: SpeechColor property is read-only for players and R/W for NPCs. For players, it contains the last speech hue sent by the client. For NPCs, its value
		will be used to set their speech hue.
- Fixed: SpeechColor not overriding the speech hue for NPCs. SpeechColor = 946 (or 0x382), which is the default gray hue for NPC speech, disables the override.
- Changed: If a hue is not specified, SAY and MSG will use SpeechColor or, if set, SpeechColorOverride.

19-05-2016, Nolok
- Fixed: wrong parsing when an unicode prompt response packet is received.

29-05-2016, Kaylala (Khaos)
(Source)
Gump Enums, New Container Defines, Misc Switches from Prop Attributes to Flags, Added AlterItem Prop.

- Added: uofiles_enums.h - New Gump Enums for several new containers, cards, and other miscellaneous assets.
- Added: CContainer.cpp - definitions for the new Container Gump assets.
- Updated: Tables - Removed Only<Race/Sex> as these are unused. 
	Split the NoDropTrade back into separate flags as they also have separated CliLocs. 
	Moved over Balanced, BattleLust, and BloodDrinker as they are now being checked as Item Attributes.
	These all are now stored on Items only.
	cItemBase_props.tbl had AlterItem added to it.
- Updated: Several old Props that are checked in Can's and Attr.
	These got a minor update switching the checks to force any 1 set in individual props to just work with those Can's and Attr's.
- Added: New Attr list from base pack reflecting EA attributes and changes from some props to a more appropriate Attr setting where no values are truly needed.
	This should save on some memory consumption.
Note: More needs to be switched over and I am trying to get this and the Base Packs completely up to date and somewhat synchronized with the most efficient methods Xun and I can think of.

30-05-2016, XuN
- Fixed CanUse not inheriting from the higher item (ie: i_boomerang_blah not inheriting CanUse from i_boomerang).
- Fixed Statf_War not clearing in every situation when calling Attacker_Clear().
- Added RecipeAlchemy,RecipleBlacksmith, RecipeBowcraft, RecipeCarpentry, RecipeCartography, RecipeCooking, RecipeInscription,
	RecipeTailoring, RecipeTinkering (all of the current SKF_CRAFT skills).
- Changed back Region Flags to dword, they do not need to store higher values yet.
- Added PayGold() method to control payment values with it's own trigger:
  ON=@PayGold:
	Argn1 = Gold to pay.
	Argn2 = Payment type ( 0 = Train, 1 = Buy , 2 = Hire).
	src = The NPC receiving the money.
	argo(if any) = The stack of gold used to pay (ie: training)

- OWNER is now RW, it can be used to set NPC's owner directly without the need of custom functions.
- Added NEWSUMMON, working as NEWNPC and NEWITEM, eg:
	serv.newsummon=c_ogre,15
	new.p=<p>	// Will summon an ogre for 15 seconds on your position, not giving
  the second param will result in default timer according to your magery skill.

29-05-2016, Kaylala (Khaos)
- Updated: Tables - Removed Balanced, BloodDrinker, and BattleLust from BaseBaseDef tables 
  and CObjBase tables since they were moved. Moved Bane and SplinteringWeapon to CItem tables.
- Added: Attr_SplinteringWeapon to CItem.h.
- Added: SplinteringWeapon, Balanced, and Bane to Item Properties and removed them from Obj
  handling. All now use ATTR_*.
- Added: Missing recipes: RecipeMasonry and RecipeGlassblowing. They might not have their
  craft skills, but they have recipes and synergy with Carpentry and Alchemy. Separated as
  they would on EA for others using a custom system.

30-07-2016, Nolok
- Updated the README.md file with fundamental informations about this fork.
- Fixed: REGIONTYPE block could not accept landtile types with index > 163. Extended this limit to 255.
	This also extends the maximum number of pages in a book.
- Fixed: Sphere crashing sometimes just before saying Defmessages: npc_generic_gone_1 and npc_generic_gone_2.
- Changed: The redefinition of a resource will always be notified, even without DEBUGF_SCRIPTS enabled in Sphere.ini.

 30-12-2016, Nolok
 - Fixed EFFECT duration (bLoop variable) on Enhanced Client. Given the same bLoop or the same packet, Enhanced Client shows the effect for a much shorter amount of time
	than Classic Client. To be the EFFECT statements more portable between the two clients, if the client is the EC then bLoop is multiplied by 3.

10-05-2017, Nolok
- Fixed: Resources page not being stored correctly. This solves a bug with books and REGIONTYPEs.
- Fixed: <ACTION> returned the skill defname but its value could only be set via the skill key
	(example: <ACTION> returns skill_hiding, but ACTION=skill_hiding didn't activate the skill, you need to use ACTION=hiding).
	Solved this dicrepancy making ACTION return the skill key. Compatibility with older scripts is
	not broken, since the skill key or defname can be compared regardless to both another key or defname.
	-> This fixes also ACTION being stored in saves (via skill defname) but not set at the server startup.
- Changed: ACT and ACTP are now stored in the save files, in order not to break actions performed during the save process
	at the server restart.
- Fixed: TAG.MATOVERRIDE containing wrong or no defname.
- Fixed: Server crashed when calling some functions with invalid argument (IsDigit, IsSpace, IsAlpha, IsAlnum).
- Changed: Added/removed some debug and warning messages; updated some other messages and enabled them also in non-debug builds.
	-> Consider now the debug build as usable (it's pretty useful for finding bugs in the source or in the scripts).
- Changed: Increased the text capacity of the console on Windows.

12-05-2017, Nolok
- Fixed: PARTY.CREATE wasn't working properly.

13-05-2017, Nolok
- Added: Now BOUNCE calls triggers @DropOn_Self and @ItemDropOn_Self on the char's backpack.
	If a RETURN 1 is performed and a new CONT has not been set via scripts on the trigger call, the item is dropped on ground,
	otherwise the item is left in the new CONT.
- Fixed: Item drop sound not being played if BOUNCE dropped item on ground.

16-05-2017, Nolok
- Added: Now FACE can also accept the coordinates of the point towards which the char should look.
- Added: Now ACTP behaves like every other point (so you can also extract x, y, z, statics, etc).
- Fixed: RESMAKE returning val and key without a space character to separate them (e.g.: 2Logs).

20-05-2017, Nolok
- Added: Print the stack trace when an ASSERT fails, in order to ease the debug process.
- Changed: Better formatting of the stack trace.

22-05-2017, Nolok
- Fixed: Garbage Collection deleting (and reporting) only a fraction of the unplaced objects. Fixed also incorrect formatting of the "invalid code".
- Added: Now the Garbage Collection report prints the script file name and the line where the object was created.
	This only works for objects added in the scripts through the keywords: NEWITEM, NEWNPC, NEWSUMMON, NEWDUPE, DUPE (and ITEM/ITEMNEWBIE since 24/09/2017).

04-07-2017, Nolok
- Fixed: random ranges ( e.g.: {i_dagger 1 i_gold 1} ) sometimes returned a totally random and unexpected value.
	If the value was used to create an item, it could either create a random item or not create it at all, without logging any error.
- Fixed: vendors couldn't re-sell the items bought from the players.
- Fixed: with the current User Interface (the blue one, not the orange which is older) of the Enhanced Client, in the buy gump
	the paperdoll of the vendor often was missing on the left.

	IMPORTANT: with the same UI of the EC the buy gump may not work, because it doesn't show the items in stock.
		This occurs with the new UI (blue) and not with the old (orange) because the new one wants the vendor to have
		its name inclusive of the title. If the "the" keyword and the following title aren't found, the code of the interface
		generates an internal error and halts the execution of the remaining code (which renders the items in the list).
		As example: if the vendor name is Greg the items don't show, but if you set the NAME (and not the TITLE property)
		to Greg the Butcher ("the" word is mandatory) the items are finally shown.
		Since the client retrieves the name with the tooltip data (Cliloc 1042971) the server sends, if you want a workaround
		to this requirement, you can leave untouched the NAME property and send a custom name cliloc which contains also the work/trade title:
			ADDCLILOC 1042971, <NAME> The <QVAL <ISEMPTY <TITLE>> ? Vendor : <TITLE>>

- Fixed: Tracking skill could not track brain_berserk npcs.
- Changed: updated error and warning messages related to resources redefinition.

04-09-2017, Nolok
- Added: the ID of an item can be overridden after its creation by a random template (which must return a non-container type item).
	Remember though that this is inefficient and that the preferred way is to use a { } random range.

20-09-2017, Nolok
- Fixed: very old bug which caused arguments of scripts instructions being silently parsed in the wrong way (if they
	contained a {} range) and generating unwanted behaviour. Example: parsing "SOUND {2 3}, 1" resulted in reading 3 arguments
	"{2", "3}", "1", instead of 2 "{2 3}" and "1".
- Changed: removed the '-' symbol as a range argument separator.
- Updated: now, when parsing weighted ranges, only the randomly extracted argument will be completely parsed and resolved,
	instead of parsing recursively each argument of the range. Maybe, this can reduce the cpu usage on big servers by a little.

21-09-2017, Nolok
- Fixed: getting the name from a name pool sometimes failed.

22-09-2017, Nolok
- Fixed: since adding an item to an NPC triggers @(Item)EquipTest trigger, doing RETURN 1 in @EquipTest or @ItemEquipTest resulted in the object created
	but not placed in the world. Now, if the character is an NPC, the item is automatically bounced into the pack even if doing RETURN 1.
- Changed: @EquipTest and @ItemEquipTest triggers are now called only when trying to equip equippable items. Before, they were called also when dropping or
	creating an item to be equipped or bounced to the pack of a NPC.

24-09-2017, Nolok
- Fixed: TDATA3 and TDATA4 for t_container were not working.
	TDATA3 stores the minimum X of an object placed inside a container as the first 16 bits, while the last 16 bits store the minimum Y.
	TDATA4 stores the maximum X and maximum Y in the same way. Example:
	TDATA3=((45 << 16) | 65)	// MinXY = ((X << 16) | Y)
	TDATA4=((100 << 16) | 100)	// MaxXY
- Added: the Garbage Collection report prints the script file name and the line where the object was created also for items created with ITEM or ITEMNEWBIE keywords.
- Fixed: Linux console not showing colored text.
- Fixed: Linux version crashing during the shutdown cleanups.

29-09-2017, Nolok
- Fixed: ACTARG1/2/3 values being zeroed or corrupted after the execution of any skill trigger.
	Now they are zeroed before the @PreStart trigger (so after @Select) and	when we are done with the skill (success, abort, failure).
	! As of r2567 (of 05-10-2017) this cleanup isn't done anymore before the @PreStart trigger but only at the end of the skill!
	Also ACTDIFF is now set and cleared in the same situations of ACTARGs.
- Fixed: FORCONT, FORCONTID, FORCONTTYPE second argument (the maximum number of subcontainers to be searched in) could only be a plain number, not an expression.
- Fixed: for crafting skills, crafting difficulty didn't increase with the required skill value.
- Added: for skills Enticement, Peacemaking and Provocation, if ACTARG1 is set to the UID of the instrument to play, it will be played the sound of that instrument.
- Added: TAG.BARDING.DIFF is now used to determine the difficulty of Enticement, Peacemaking and Provocation skills. If this tag isn't set, the old behaviour is used.

10-10-2017, Nolok
- Fixed: object created but not placed in the world when trying to make a player equip non-equippable items; now they are bounced to the pack.
	This fixes also the items in the NEWBIE section not being added (sometimes, and for some kind of items) at the character creation.
- Fixed: bug occurring when doing REMOVE and RETURN 1 in @(Item)EquipTest trigger fired on an NPC.
- Changed: ACTARG1/2/3 values are now cleared only when we are done with the skill (success, abort, failure).

21-10-2017, Nolok
- Fixed: if the client's LIGHT property was set, the Night Sight flag was ignored when calculating the light level to send to the client.
- Fixed: the client didn't get the new light level nor when the sector's LIGHT property was overridden, neither when the client's LIGHT property was changed.
- Added: warning message if AllowLightOverride ini flag is set to 0 but we are trying to manually set the sector's LIGHT property.

22-10-2017, Nolok
- Fixed: when using the meditation skill, if the SKF_NOSFX flag was set, the bufficon wasn't added.
- Fixed: ACTARG1/2/3 weren't zeroed at skill success, abort or failure if the SKF_SCRIPTED was set.
- [Port from Source, 13-02-2017, Coruja] Changed: Spellbooks now store spell offset / max spells using TDATA3/TDATA4 instead MOREZ/MOREX.
- [Port from Source, 21-04-2017, Coruja] Changed: Mount memories now can have their own i_mt_* ITEMDEFs instead use DEFNAME=i_mt_* directly on base items (usually 'boat parts').

23-10-2017, Drk84
- [Port from Source, 14-02-2017, Coruja] Fixed: Combat Hit Chance formulas incorrectly assuming that defender is always using the same combat skill as the attacker.
  
24-10-2017, Drk84 
- [Port from Source, 19-09-2017, Coruja] Fixed: Client 'Open Spellbook' macro making the client crash if it tries to open the requested spellbook gump when the spellbook item is not loaded yet.

24-10-2017, Nolok
- Fixed: using ADDCIRCLE without the second argument caused sphere to crash. Also, its use on non t_spellbook items was incorrectly allowed.
- Fixed: MODMAXWEIGHT of a new player or item was a random number instead of zero.
- Fixed: corpse MORE2 held an invalid UID instead of the killer's.
- [Port from Source, 15-10-2017, Coruja]
	Fixed: MODMAXWEIGHT property not working correctly.
	Changed: Updated 'weight' tooltip on containers.

24-10-2017, Drk84
- [Port from Source, 27-09-2016, Coruja] Fixed: Worldsave not saving DAM/ARMOR properties set manually on chars/items already placed on world.

28-10-2017, Drk84
- [Port from Source, 08-05-2016, Coruja] Fixed: Explosion potions not working correctly.
- [Port from Source, 07-02-2017, Coruja] Fixed: Hidden/Invisible chars not getting revealed when being stumbled.

29-10-2017, Nolok
- Added: now the logout console message shows also the character's name.

30-10-2017, Drk84
- [Port from Source, 17-10-2016, Coruja] Fixed: NPCs losing 'statf_spawned' flag after server restart.
- [Port from Source, 30-01-2017, Coruja] Fixed: ML/SA/HS/TOL doors not working correctly.

01-11-2017, Drk84
- [Port from Source, 12-01-2017, Coruja] Fixed: Char death counting kill/fame/karma gain for killers that started the attack but don't have caused any damage yet.

05-11-2017, Drk84
- Added SkillAdjusted commmand, returns the skill value adjusted by the stat bonus.
  The stat bonus are BONUS_STR, BONUS_DEX, BONUS_INT and BONUS_STATS and they can be found in sphere_skills.scp
  Normally you can see the skill values adjusted by the stats bonues by checking the value of the skill in the Skill Menu when the "Show Real" option is turned OFF,
  The adjusted skill value is used by Sphere for calculating the chance of success for NON-combat skills (and also ResistingSpells), in the scripts there was no
 "short-way" to display the correct chance of success unless using a lot of multiplication and division. 
  Usage:   SkillAdjusted.skillnumber or SkillAdjusted.skillkey (Example: SkillAdjusted.1 or SkillAdjusted.Anatomy)
  Example calculating chance of success by scripts:
  ON=@SkillStart
	local.skillFlag =<serv.skill.<argn1>.flags>
	if !(<local.skillFlag>&SKF_FIGHT)
		if <actdiff> >= <skilladjusted.<argn1>>
			sysmessage @50 <serv.skill.<argn1>.name>: <fval randbell(<eval (<skilladjusted.<argn1>>) - <actdiff>>,100)>%
		else
			sysmessage @50  <serv.skill.<argn1>.name>: <fval 1000 -  randbell(<eval (<skilladjusted.<argn1>>) - <actdiff>>,100)>%
		endif
	endif

06-11-2017, Nolok
- Changed: renamed CLIENTISSA command to CLIENTISENHANCED.
- Fixed: BADSPAWNS not working.
- Fixed: using SKILLCHECK, SEX, ANIM, MAKEITEM without proper arguments could not work or even crash the server.

07-11-2017, Nolok
- Fixed: beard not added at the character creation with the 2D client.
- Fixed: character creation on the Enhanced Client didn't add the face or the gargoyle horns.

08-11-2017, Drk84
- Fixed: wrong sound played when a human male character get hit.
- Fixed: monsters and animal sometimes executing the wrong animation when attacking.

09-11-2017, Nolok
- Fixed: RAND(x) not returning a value between 0 and x - 1 (instead it returned a value between 0 and x).

09-11-2017, Drk84
- [Port from Source, 12-03-2017, Coruja] Added: Basic internal packet filters that will make Sphere avoid crash or consume excessive resources when under DDoS attack.

10-11-2017, Nolok
- Updated NPC ally groups. Before this commit, they included the creatures up only to the LBR expansion. This affects the NPC hostility
	calculations and the Provocation skill.
- Added: override for an hardcoded behaviour of Provocation. If the provoked character is in the same ally group of the targeted character, at the skill @Success
	the skill execution was (and still is) aborted. Now on skill @Start trigger ACTARG3 is set to 1 if the characters are in the same ally group, otherwise it's 0.
	Then, if you want to always allow the Provocation, put ACTARG3=0 in @Start or @Success.
- [sphere_msgs.scp] Added: PROVOCATION_KIND defmessage to be shown if the Provocation skill is aborted due to provoked and target characters being in the same ally group.

12-11-2017, Nolok
- Fixed: nested random ranges not being parsed correctly.
- Fixed: random ranges ignoring the last element-weight couple.
- Changed: ADD command does not show anymore the console error if the argument is invalid. The sysmessage is still displayed.

05-12-2017, Drk84
- [Port from Source, 05-09-2016, Coruja] Fixed: TimerCall setting on sphere.ini using wrong time format (hours instead minutes) to call f_onserver_timer function

13-12-2017, Drk84
- Possible fix for stat cap issue when the sum of the players stats are at StatCap -1. 

23-12-2017, Nolok
- Added: trigger @NPCActWander. It is called each step an NPC does while wandering. ARGN1 = 0 if it will continue to wander, 1 if randomly deciding to stop, 2 if deciding to stop because
	after looking around it found something interesting; ARGN2 = 1 if it's returning to home, 0 otherwise.
	RETURN 1 stops decisions for this step, so it will not return to home, do another step or stop wandering (again, for this step).
- Updated: NPCs when wandering around now do "look around", doing in fact some AI checks.
	This also makes the trigger @NpcLookAtChar fire more times than before.
- Updated: if DEBUGF_ADVANCE_STATS is enabled in the .ini, the gain chance will be shown also on non-debug builds.

29-12-2017, Nolok
- Fixed: wrong sound played when using BARK, shrinking/unshrinking a pet, pet receiving a speech command.
- Fixed: playable characters (men, elves and gargoyles) NPCs should not make random noises when wandering around.
- Added: debug message when trying to retrieve the SOUND property from an NPC whose property wasn't set.

29-12-2017, Drk84
- Fix for the spellchanneling item property.

03-01-2018, Drk84
- (Source) Added missing parenthesis to MulDivLL and MulDiv.

03-01-2018, Nolok
- Fixed: when playing a sound from a character from Samurai Empire and later expansions, it was chosen the wrong sound ID for the given action. This is caused by the different
	order of IDs in the sound file after that expansion. Also, updated the script pack (sphere_defs.scp and sphere_monsters.scp) with a lot of new and corrected old sounds.
	Still, some sounds are missing.
- Fixed: some rare combat-related crashes.
- Added: SOUNDACT_RAND, SOUNDACT_IDLE, SOUNDACT_NOTICE, SOUNDACT_HIT, SOUNDACT_GETHIT, SOUNDACT_DIE defs to the scripts. They are meant to be used with BARK,
	which has always accepted as parameter the sound type (even if the wiki at this day doesn't say so), not the sound ID (use SOUND for this).
- Updated: now when an NPC is looking around it can play different sounds depending on its AI choices.

05-01-2018, Nolok
- Added: SOUNDIDLE, SOUNDNOTICE, SOUNDHIT, SOUNDGETHIT, SOUNDDIE CharDef properties. When a creature emits a sound linked to an action, the sound ID of	the corresponding override,
	if set, will be used instead of obtaining it from the SOUND property. Set one of these overrides to -1 if you don't want that action-related sound to be played.

14-01-2018, Drk84
- Fixed: The effect value of spells that equips a "memory item" on a character (Bless, Curse and so on) was calculated twice, also causing to ignore the 
	value of local.effect.
	
25-01-2018, Nolok & Drk84
- Changed the way ACTARG1/ACTARG2/ACTARG3 are saved, they will be saved only if their value is different from 0 and the character's action is a valid skill or is one 
	of the action that uses ACTARG1/ACTARG2/ACTARG3 (NPCACT_FLEE, NPCACT_TALK, NPCACT_TALKFOLLOW, NPCACT_RIDDEN).
- Reverted the following changes made in a precedent commit for avoiding conflict with Spellcasting or custom scripts.
	Removed the call to Skill_CleanUp method inside the trigger checks in Skill_UseQuick.
	Removed the reset of ACTARG1/ACTARG2/ACTARG3 inside the Skill_CleanUp method.

27-01-2018, Nolok & Drk84
- Fixed: crash occurring when an NPC cleared its Attackers.
- Fixed: magic-capable NPCs often did not attack or cast spells when they should instead start to attack.

29-01-2018, Nolok
- Added: ini setting MaxLoopTimes is now controlling also the TIMERF executions. If too many TIMERFs are executed in the current tick, the loop will be aborted and a warning will be issued.
	If it value is 0, there will be no limit (still it is suggested to set a value, even very high, because have just a distraction when writing some kind of scripts and you can cause a deadlock).

31-01-2018, Drk84
- Fixed: when a character started to attack, the first swing was started after an incorrect amount of time.
	This was done by reverting an old supposed (and broken) fix for a combat exploit, which we couldn't recreate.

31-01-2018, Nolok
- Fixed the multi-threading and async networking system, which was disabled long time ago because of its instability.
- Added ini flags: NetworkThreads (specify how many new network threads do you want), NetworkThreadPriority (priority of the dedicated networking threads),
	UseAsyncNetwork (enable/disable asynchronous packet sending).

02-02-2018, Drk84
- [Port from Source, 22-01-2018, Coruja] Fixed: Spells being disturbed even when they have INTERRUPT=0.0 set.

14-02-2018, Nolok
- Fixed: ARGN2 of @Login trigger storing a wrong value.
- Changed: like Source, also this branch now uses 64 bits internal tick count, instead of the old 32 bits.
- Updated SphereCrypt.ini.
- [Port from Source, 20-03-2017, Coruja] Fixed: Message 'World save completed in X seconds' not showing correct timing precision on Linux builds.
- [Port from Source, 01-10-2017, Coruja] Fixed: Lightsource items not updating tooltip after toggle light state.
- [Port from Source, 03-10-2017, Coruja]
	Fixed: AutoTooltipResend .ini setting not working on equipped items.
	Fixed: Summoned NPCs not showing smoke effect when they got released.
- [Port from Source, 26-12-2017, Coruja] Fixed: 'memory_guard' memories not being removed after its linked item get deleted.
- [Port from Source, 27-01-2018, Coruja] Fixed: Items placed on char backpack not checking char weight limit correctly before get equipped.
- [Port from Source, 30-01-2018, Coruja] Fixed: Items not getting amount stacked when dropped on ground.

16-02-2018, Nolok
- Updated: VisualRange maximum value is now 24 (this maximum value is valid for Classic Clients 7.0.55.27+ and probably all the Enhanced Client versions;
	prior client versions support a maximum value of 18).
- Changed: DistanceTalk, DistanceWhisper, DistanceYell ini settings can now have two special values: if -1 it will never be heared, if 0 it will be heared
	if the distance from the source to the listener is <= the listener's VisualRange.
- Fixed: multi placement is now checking if there's enough space around the target using the multi size instead of a fixed size area of 18 tiles.
- Fixed: internal CAN checks not working for high value CAN flags.
- Fixed: rare time overflows in internal checks.

17-02-2018, Nolok
- Fixed: items not being dropped on ground and being kept on the dragging layer when dragging an item too heavy and aborting the dragging action.

18-02-2018, Nolok
- Fixed: when an overloaded player drags an equippable item on himself, it returned to its previous location on the ground instead of at the player's feet.

24-02-2018, Drk84
- Fixed: Unhandled [TYPEDEF 40] error when creating a "chair" item, this was caused by the removal of typedef t_chair in the scripts pack.

03-03-2018, Drk84

05-03-2018, Drk84
- [Port from Source, 30-06-2016, Coruja] Fixed: WOP flood when casting spells using extremely short delays.

07-03-2018, Nolok
- Fixed: light sources didn't change their light type according to their MOREZ.
	Remember: a light source needs the CAN_I_LIGHT CAN flag and the LightSource Tiledata flag.
- Fixed: characters always had the CAN flag MT_EQUIP, even when it wasn't set in the script.
- Fixed: a lot of buggy internal CAN checks.
- Added: CANMASK item and char property. This property is a bitmask, like the CAN property, and stores the CAN flags to be dynamically switched on or off from the base CAN property.
    When retrieving the CAN property, now it is first XORed with CANMASK (the return value will be CAN ^ CANMASK), so in other words:
        If a flag set in the CANMASK is also set in CAN, the flag is ignored;
        If a flag set in the CANMASK isn't set in CAN, the flag is considered as set.
- Changed: the CAN property now is READ-ONLY and can be set only in the ITEMDEF/CHARDEF blocks.
    This change ensures that the CAN property of an object will always be synchronized with the current ITEMDEF/CHARDEF.
    Retrieving the CAN value (<CAN>) will return the ITEMDEF/CHARDEF CAN modified with the CANMASK.
    To retrieve the base CAN value, use <SERV.ITEMDEF(defname).CAN> or <SERV.CHARDEF(defname).CAN>.

08-03-2018, Nolok
- Fixed #28: skills not failing correctly when ACTDIFF was -1. Among the other bugs, this also permitted to spam spells without delay.

11-03-2018, Nolok
- Fixed #30: player couldn't move items in the backpack.

13-03-2018, Nolok
- Fixed: BOUNCE (and commands like MAKEITEM which at some point bounce some items) did not check if the container could actually hold the item, so ignoring
	the maximum items count, the maximum weight of its content, the size of the item, etc.

15-03-2018, Nolok
- Fixed: a GM could shoot through impassable items (like walls) with ranged weapons.
- Fixed: couldn't shoot through windows with ranged weapons when the Advanced LOS algorithm was on.

16-03-2018, Nolok
- Fixed: NPCs could move to points they shouldn't be able to reach/walk on.
- Fixed: characters couldn't equip some items.

19-03-2018, Nolok
- Fixed: summoned monsters with BRAIN_BERSERK didn't decrease owner's CurFollower property when killed.
- Fixed: BRAIN_BERSERK monsters hitting more times than normal during combat.
- Fixed: bonded pets losed their pet status and their master after they died.
- Fixed: corpses being always created with the front falling animation, never with the backwards falling one.

20-03-2018, Nolok
- Added: .ADD command accepts as a second parameter the amount of the item to create. Usage: .add i_gold, 500
- Fixed: starting locations of the Enhanced Client's character creation wasn't working.
- [Port from Source, 27-11-2016, Coruja]
	Added: Support for items health bar on HS clients >= 7.0.30.0. Added the CAN flag 'can_i_damageable' to enable health bar on items (MORE1L = cur hitpoints / MORE1H = max hitpoints).
- [Port from Source, 30-11-2016, Coruja]
	Fixed: Server crash when custom clients connect using invalid client version.
- [Port from Source, 22-12-2016, Coruja]
	Fixed: Enhanced clients not able to login on accounts with no created chars.
- [Port from Source, 24-12-2016, Coruja]
	Added: Support for character face style on enhanced clients. It works like hairs/beards, just create the item and equip it on character.
	[Sphere.ini] Added: new FEATURE_EXTRA_ROLEPLAYFACES feature to enable extra roleplay face styles on character creation
- [Port from Source, 25-12-2016, Coruja]
	Removed: Support for CHARLIST function on enhanced clients, they don't have support for this packet anymore, so disabling it will prevent client crash.
- [Port from Source, 17-01-2017, Coruja]
	Fixed: Functions SYSMESSAGELOC / SYSMESSAGELOCEX using wrong default color.
- [Port from Source, 16-06-2017]
	Added: New item property PICKUPSOUND to override default pickup sound for items (it can be used together with DROPSOUND).
- [Port from Source, 02-01-2018, Coruja]
	Fixed: ENHANCEPOTIONS item property only working when FEATURE_AOS_UPDATE_B .ini feature is enabled.
- [Port from Source, 19-02-2018, Coruja] 
	Fixed: Sphere console not closing correctly when it get closed before load startup files.
	Fixed: Multis (houses/boats) not being loaded at proper distance when client is walking.
- [Port from Source, 14-03-2018, Coruja]
	Fixed: Server function 'f_onaccount_connect' not being called correctly when AccApp=2 (free/auto account) is set on sphere.ini.
- [Port from Source, 19-03-2018, Coruja]
	Fixed: Multi placement making players get stuck when place the multi over his own char.
	Fixed: Multi placement being incorrectly blocked by region flags region_flag_underground, region_flag_guarded, region_flag_safe.

23-03-2018, Nolok
- Fixed: ATTACK command didn't set maximum priority to attacking the specified character over the others.
- Added: .ini setting CombatArcheryMovementDelay. If the COMBAT_ARCHERYCANMOVE CombatFlag isn't set, use that value to set the seconds after which a player, after he stopped moving,
	can start again a new combat swing with	a ranged weapon.
- [Port from Source, 19-04-2016, Coruja] Fixed: Protection spell not working correctly if COMBAT_ELEMENTAL_ENGINE combat flag is disabled.
- [Port from Source, 21-04-2016, Coruja] Added: New guild functions ISALLY/WEALLIANCE/THEYALLIANCE, they work exactly in the same way as ISENEMY/WEWAR/THEYWAR but used to set alliances instead of wars.
- [Port from Source, 29-04-2016, Coruja]
	Fixed: Hidden (statf_hidden|statf_invisible) chars not being revealed when others chars walk over him.
	Fixed: Vendor buy menu showing wrong char 'gold available' value.

25-03-2018, Nolok
- Added: .ini option flag OF_NoPaperdollTradeTitle. If set, the trade title will not be shown on the paperdoll.
- Fixed #32: GOLD function wasn't working correctly for values > 65535.
- Fixed: some exceptions were sometimes generated when an NPC looked around for the best character to attack.
- Fixed: some noto checks weren't considering the Incognito status of the character.
- Fixed: green noto was sent for party members only if tag.PARTY_CANLOOTME == 1.
- Changed: '?' console command shows better informations.
- [Port from Source, 08-05-2016, Coruja] Fixed: Functions SKILLLOCK/STATLOCK not updating the lock icon on client skills/stats window.
- [Port from Source, 07-06-2016, Coruja]
	Added: Missing features on Incognito spell
		- It will change char name to a random human/elf/gargoyle male/female name instead of using always Man/Woman.
		- It will change char body/hair/beard to a random color temporarily.

28-03-2018, Nolok
- Fixed: combat animation now has the same duration as the combat swing (before, it had a fixed duration of ~ 0.7 s). On the 2D/Classic Clients, the Gargoyle playable character animations still have
	a fixed duration, because to show those animations we need to send a new animation packet, which doesn't support a variable duration. On Kingdom Reborn and Enhanced Clients, the animation still has
	a fixed duration, because both the old and the new packets generates here a fixed duration animation.
- Fixed #33: CanSeeLOS not parsing correctly the char UID when passed as argument.
- Fixed #36: Poison spell extremely bugged when MAGICF_OSIFORMULAS was enabled.
- Changed: added upper limit (65535) to the .ini setting ItemsMaxAmount.
- Fixed: GOLD, NEWGOLD ignoring the ItemsMaxAmount .ini setting.
- Fixed: duped char not inheriting the brain.

31-03-2018, Drk84
-Fixed: "CRIMINAL 0" not removing the criminal memory item.

01-04-2018, Nolok
- [sphereCrypt.ini]: Added encryption key for Classic Client 7.0.62.x and Enhanced Client 4.0.62.x.
- Changed: added a limit of 25.000.000 to GOLD and NEWGOLD functions, to avoid making sphere hang or crash when using too high values.
- Fixed: the new animation packet wasn't working properly when attacking with a bow or a crossbow.
- Fixed: temporarily animated items, when their timer reached zero, never appeared to return to their original state (even if they actually did) when using some clients.
- Fixed: some items (like lanterns, fruits, crops...) accepted as valid MORE1/2 or TDATA1/2/3/4 only an item ID and generated an error if that was a defname.
- [Port from Source, 02/06/2017, Coruja] Changed: Misc fixes and improvements on training items (Training Dummy, Pickpocket Dip and Archery Butte).
- [Port from Source, 06/06/2017, Coruja]
	Fixed: Throwing weapons not working correctly.
	Added: Missing animation of throwing weapons returning after throwing them.
- [Port from Source, 16/06/2017, Coruja] Improved Throwing weapons returning animation.
- [Port from Source, 02-01-2018, Coruja] Changed: Improved how ranged weapons handle ammo.

04-04-2018, Nolok
- Fixed: wrong NEWBIE set added at the character creation (gargoyle in place of the human one, if the player was a human).
- Changed: a client now logouts instantly if its account PLEVEL is >= 2, that is, starting from the the Counselor priv.
	Before this change, it logged out instantly only if the GM mode was activated, regardless of the plevel.

10-04-2018, Nolok
- Added: SERV.TILEDATA to read directly from the tiledata.mul the item properties.
	Use SERV.TILEDATA.TERRAIN(id).property to get a specific property for a given landtile id. Retrievable properties: FLAGS, UNK, INDEX, NAME.
	Use SERV.TILEDATA.ITEM(id).property to get a specific property for a given item id. Retrievable properties: FLAGS, UNK5, WEIGHT, LAYER, UNK11, ANIM, UNK19, HEIGHT, NAME.
	Probably the most useful usage of these keywords is to retrieve the paperdoll gump id of an item: <SERV.TILEDATA.ITEM(<DISPIDDEC>).ANIM> + offset,
	where the offset is 50000 for male gumps and 60000 for female gumps.
- Fixed: .show command sometimes showing a truncated command argument.

14-04-2018, Nolok
- Fixed: MEMORY function was overwriting the old memory flags, instead of adding new ones.
- Fixed: Client sometimes didn't receive an update when a char notoriety flag changed.
- Changed: removed CHARGESCUR and CHARGESMAX item properties, which were only partially supported. Use USESCUR and USESMAX instead.

15-04-2018, Nolok
- Fixed: tooltips sometimes not being updated.
- Fixed: t_crops and t_foliage weren't working correctly.

20-04-2018, Nolok
- Fixed: some functions (like SKILLCHECK, TEXTF and others) didn't parse the arguments correctly.
- Fixed: setting P for an item or a char didn't send an updated position to clients.

28-04-2018, Nolok
- Added: CombatParryingEra ini flag. It controls the parrying behaviour:
   01 = pre-SE parrying chance formula (not using the Bushido skill). Mutually exclusive with 02 flag.
   02 = SE parrying chance formula (using the Bushido skill). Mutually exclusive with 01 flag.
   010 = can parry with a shield
   020 = can parry with a one-handed weapon without a shield
   040 = can parry with two handed weapons
- Fixed: parrying chance was too high if the Parrying skill was > 100.0.

29-04-2018, Nolok
- Fixed: parrying chance didn't scale correctly with Dexterity.
- [Port from Source, 18-04-2018, Coruja] Changed: Small improvements on tooltip engine (containers weren't resending their tooltip after their weight changed,
    and some tooltips weren't updated for items with an expired timer).
	
30-04-2018, Drk84
- Added behaviour for the Focus skill, the skill is used automatically and only when FEATURE_AOS_UPDATE_B is enabled.
  The Focus skill increase, passively, the amount of stamina gained by 1 for each 10% points of skill value and increase by 1 the amount of mana gained for 
  each 20% points of skill value.

02-05-2018, XuN
(Source)
Added the basics of an ECS: CEntity and CComponent so we can split into modules (components) the core of the current big classes (CObjBase, CItem, CChar).

 - CEntity act as a wrapper for CObjBase (ATM) storing a list of CComponent* inside and redirecting some basic code to all of them (r_Write, r_WriteVal, r_Load, r_LoadVal, r_Verb and r_GetRef) and provides also a GetComponent(COMP_TYPE) for external interaction.
 - CComponent acts as a wrapper for each module of code and, as abstract, class requires the above functions to be on them for overriding (these must return true if something was executed on them, so CEntity will stop to try them on other CComponents or false if not so the loop continues). For items these components must be added on CItem::CreateBase, eg:
         case IT_SPAWN_CHAMPION:
        {
            pItem = new CItem(id, pItemDef);
            pItem->SubscribeComponent(new CCSpawn(pItem));
            pItem->SubscribeComponent(new CCChampion(pItem));
            break;
        }
Changed CItemSpawn into a CComponent 'CCSpawn'
Changed CItemChampion into a CComponent 'CCChampion'
Changed CCFaction into a CComponent.

(Server)
Fixed NPCs not casting/fighting continuously and going to wander randomly (CChar::NPC_Act_Idle()), also reformatted some files.
Fixed some Spell's related stuff not returning correctly the spell required for NPCs.

(Scripts)
SPAWNS:
	-Added Keywords SpawnID, TimeLo, TimeHi and MaxDist, explained bellow.
	-Changed AT* to r_GetRef so it finds out the object on the n position and works over it.

*There were no major changes on Spawns however i'll leave here a brief explanation of how they work along the new keywords and the updated AT* behaviour.

-TYPES = t_spawn_item, t_spawn_char. Each one generates a different type of objects in the game (it may be revised in the future to merge both*, not soon anyway).
-SPAWNID/MORE/MORE1(R/W) = spawn's ID (can be an Item/Template of items(for t_spawn_item) or a Char/Template of chars(for t_spawn_char)).
NOTE:MORE2 works different for each spawn type.
-MORE2/COUNT(R) on t_spawn_char: returns the total spawned characters.
-MORE2/PILE(R/W) on t_spawn_item: Total amount of items that may be generated at once.

-MOREX/TIMELO(R/W) = Minimum spawn time in minutes.
-MOREY/TIMEHI(R/W) = Maximum spawn time in minutes.
-MOREZ/MAXDIST(R/W) = Maximum spawn distance (for both distance away of the spawn (for Items and Chars) when created and max distance to get away from spawn(for NPCs)).
-MOREP(R/W) = the three MOREX,MOREY,MOREZ grouped as one prop (same as TIMELO,TIMEHI,MAXDIST).

-AT*(R/W) = Access the object in the N position and reads/writes/executes the given text, eg: at.0.remove, <at.0.str>...
-AMOUNT(R/W) = Total amount of objects this spawn can have at the same time.
-ADDOBJ(W) = Adds to the spawn an object with the given uid (must be a valid uid).
-DELOBJ(W) = Deletes from the spawn an object with the given uid (must be a valid uid).
-START(W) = Forces the spawn to start spawning.
-STOP(W) = Stops the spawn and removes everything it created.
-RESET(W) = Froces an STOP and then START it again.

Simple explanation:
1) When double clicking on an STOPPED spawn (nothing has yet spawned from it) START is called.
2) One object is generated within a distance of MOREZ/MAXDIST.
	-For t_spawn_item the amount of items generated each time is equal to a random value between 1 and PILE.
	-for t_spawn_item the maximum distance the NPC can wander away is set equal to MAXDIST
3) The spawn's timer is set to a value (in minutes) between MOREX and MOREY (TIMELO and TIMEHI).
4) 2 and 3 are repeated while COUNT < AMOUNT, when COUNT reachs or surpases (it may happen with custom behaviours added from scripts) AMOUNT only 3 will be repeated (nothing will be spawned but the timer will be set again).


05-05-2018, XuN:
[Port from Source, 20-01-2017, Coruja]
Added: New function MAPWAYPOINT to add/remove waypoints on client radar map (enhanced clients only).
	Syntax: MAPWAYPOINT ObjectUID, WaypointType
	Waypoint types:
		0 = Remove waypoint
		1 = Corpse
		2 = Party Member
		4 = Quest Giver
		5 = New Player Quest
		6 = Healer
		11 = Shrine
		12 = Moongate
		14 = Green Dot
		15 = Green Dot (flashing)

[Port from Source, 02-04-2018, Coruja]
Added: New char trigger @UserUltimaStoreButton, fired when click on 'Ultima Store' button on new clients 7.0.62+

06-05-2018, XuN
Added Damageable Items functionality allowing them to have HP bars, only for items that have CAN_I_DAMAGEABLE flag on CAN or CANMASK properties and for clients 7.0.30+
To modify their HP use HITS and MAXHITS on them
[Sphere.ini]
-Added RegenItemHits to control the update period of those items' hp.

08-05-2018, Drk84
- Fixed #79: Protection spell AR stacking when COMBAT_ELEMENTAL_ENGINE is disabled. 

08-05-2018, XuN
House triggers:
    -Added @HouseDesignCommitItem for each commited item, with args:
        local.id=ID of the item
        local.p.x=x location
        local.p.y=y location
        local.p.z=z location
        local.visible=0 or 1 (non-visible items are things like doors and signs)
        return false will remove this item from the commit.*
    *if not return false a local.MaxZ will check the P.Z value of the item and update it if it's higher than the old one.
    -Changed @HouseDesignCommit: added local.MAXZ(Read Only) returning the value of the top placed item.
    
Added character storage for it's own houses:
	- Added AddHouse uid(WO): Adds the given uid to the player's house.
		If the player current count of houses is greater than the limit he has, the house will be redeeded.
	- Added DelHouse uid(WO): Deletes the given uid from the player's list (Will not delete the house)(-1 clears the whole list).
	- Added Houses(RO): Return the houses on the player's list.
    - Added GetHousePos uid(RO): Returns the position of the given UID on the houses list (-1 if not found).
	- Added MaxHouses(RW) to Accounts and Chars, when created they read this new setting from the sphere.ini (if values on sphere.ini change, they will not reflect on already created accounts/chars).
	- Added REF to 'HOUSE.x' to access the house in the Nth position, eg: house.3.Redeed, local.house_p=<house.1.p>
    Note: Houses generated before this change will not be updated on the player's list, instead the player will still have the memory with color=MEMORY_GUARD (0x100)
    linked to the house,since there was no default behaviour other than this and each house script handles it differently, there will be no hardcoded update
    to the new system, each house system should be updated according to it's behaviour (ie: removing the memory and setting AddHouse <HouseUID>)

    -Added MaxHouses(RW) property for accounts, Default = Serv.MaxHousesAccount.
    -Added MaxHouses(RW) property for chars (meant for players), Default = Serv.MaxHousesPlayer.
    * Setting MaxHouses = 0 for Players will skip the setting and read it from it's Account.
    * Setting MaxHouses = 0 for Players and Accounts will allow to build without limit.

Massive changes on multis (houses for now).

[sphere.ini]:
    - Added MaxHousesAccount = Max houses an account can have (default 1).
    - Added MaxHousesPlayer = Max houses one player can have (default 1).
    - Added AutoHouseKeys = 1 to generate keys for multis on creation, 0 to disable.
	
Updated [sphere_def.scp]:
    [DEFNAME house_types]
    house_private=0
    house_public=1
    house_guild=2
    [DEFNAME house_transfer_types]
    transfer_nothing	= 0		// Do not transfer any item to the Moving Crate, the crate will still be moved if uid is given.
    transfer_lockdowns	= 01	// Transfer LockDowns
    transfer_addon		= 02	// Transfer Addons
    transfer_all		= 04	// Transfer LockDowns, Addons and every other item found inside a house that is not a component of it.
	
Updated [sphere_defs_types_hardcoded.scp]
    [TYPEDEFS]:
    t_multi_addon=201   // AddOns, the deed must have attr_magic to bypass placement checks and allow the addon to be placed inside houses.
	
New keys added to [MULTIDEF ] (and updated [multis_houses.scp] with them):
-BaseStorage (RW): Base limit of item storage for this multi.
-BaseVendors (RW): Base limit of vendor capacity for this multi.
-LockdownsPercent (RW): Base LockdownsPercent value for this multi.
(Read the House Storage support revisions for more info.)
	
Added internal storage for Owner, Coowners, Friends, Bans, Locked down items (Lockdowns), Vendors and House Components.

-House Permissions:
	// Owner
    - Added SetOwner uid(WO): Sets the owner's uid to the new one (will remove the House from previous owner (if any) and delete his keys for this house).
		Forces AddHouse <multi_uid> on the Owner
    - Added IsOwner uid(RO): Returns 1 if the given uid is the owner.
	// Coowners
    - Added AddCoowner uid(WO): Adds the given character uid to the coowner list.
	- Added DelCoowner uid(WO): Deletes from the coowners list the given uid (-1 to clear the whole list)*.
    - Added GetCoownerPos uid(RO): Returns the position of the given UID on the coowners list (-1 if not found).
	- Added Coowners(R): Returns the total count of Coowners.
	// Friends
    - Added AddFriend uid(WO): Adds the given character uid to the friend list.
	- Added DelFriend uid(WO): Deletes from the friend list the given uid (-1 to clear the whole list).
    - Added GetFriendPos uid(RO): Returns the position of the given UID on the friend list (-1 if not found).
	- Added Friends(R): Returns the total count of friends.
	// Bans
	- Added AddBan uid(W): Adds a char with the given UID to the Ban list.
	- Added DelBan uid(W): Deletes from the Ban list the given UID (-1 clears the whole list)*.
	- Added GetBanPos uid(R): Returns the position of the given uid on the Bans list (-1 if not found).
	- Added Bans(R): Returns the total count of Components.
	// Locked down items
    - Added LockItem uid: Adds the given UID to the LockDown*
    - Added UnlockItem uid: Removes the given UID from the LockDown list (-1 clears the whole list)*.
    - Added GetLockedItemPos uid(R): Returns the position of the given UID on the Components list (-1 if not found).
	- Added Lockdowns(R): Returns the total count of Lockdowns.
	// Vendors
    - Added AddVendor uid: Adds the given UID to the Vendors' list.
    - Added DelVendor uid: Removes the given UID from the Vendors' list (-1 clears the whole list)*.
    - Added GetVendorPos uid(R): Returns the position of the given UID on the Vendors list (-1 if not found).
	- Added Vendors(R): Returns the total count of Vendors.
	// Components
	- Added AddComponent uid(W): Adds a Component with the given UID.
	- Added DelComponent uid(W): Deletes from the Components list the given UID (-1 clears the whole list)*.
	- Added GetComponentPos uid(R): Returns the position of the given UID on the Components list (-1 if not found).
	- Added Components(R): Returns the total count of Components.
	- Added GenerateBaseComponents(W): Regenerates the components the house has on the [MULTIDEF ] (this does NOT delete current components nor recode/remove current keys).
	- Added DeleteAllComponents(W): Removes all current components.
	
	
* Passing as param -1 (or 0FFFFFFF) will clear those lists but nothing more, it won't remove the objects, clear; attrs, props, events, etc; applied, it must be done before clearing the list.
- Added REF to OWNER, COOWNER.x, FRIEND.x, BAN.x, LOCKDOWN.x, VENDOR.x, COMPONENT.x, to access the objects inside and work on them, eg: OWNER.say I'm da Boss!, local.coowner=<coowner.13.uid>, etc

-Keys management:
	- Added AutoHouseKeys setting on sphere.ini to set wether the multis should generate keys automatically or not.
    - Added AddKey uid(RW),fDupeOnBank:
        uid: The uid of the char to give this key to.
        fPlaceOnBank: if set to 1 will place the key in the char's bank, otherwise it will be bounced to the backpack.
        (When reading it, eg: ref1=<AddKey uid>) returns the UID of the generated key.
    - Added RemoveKeys uid(WO): Removes all the keys linked to this house for the character with the given uid.

-Moving Crate support:
    - Added MovingCrate(RW):
     When setting to a container's UID, if there was any other existing MovingCrate, it's contents will be transfered to new crate.
     When the multi is being deleted all linked items will be transfered to the current Moving Crate and the crate to the owner's bank (if any),
     a TAG.MULTI_UID with the multi's uid will be set on the crate.
	 When accessing to the Moving Crate via script a new one will be created if the existing does not exist.
	 Moving Crates created by the server will have 't_moving_crate' TYPEDEF event applied.
	- Added MoveLocksToCrate: Moves all Locked Down items to the Moving Crate (Faster than MoveAllToCrate uid,x,TRANSFER_LOCKDOWNS).
	- Added MoveAllToCrate iTransferType(WO):
        Moves to the Moving Crate all the items inside the multi that meets the following requirements:
            A) Are linked to the multi.
            B) Are not multi's components.
        If a container's uid is given, the Moving Crate will be transfered to that container.
        iTransferType: Type of items being transfered:
            TRANSFER_NOTHING  = 0x0 // Do not transfer any item to the Moving Crate, the crate will still be moved if uid is given.
            TRANSFER_LOCKDOWNS= 0x1 // Transfer LockDowns, if there's only need of transfering lockdowns use MoveLocksToCrate)
            TRANSFER_ADDON    = 0x2 // Transfer Addons
            TRANSFER_ALL      = 0x4 // Transfer LockDowns, Addons and every other item found inside a house that is not a component of it.
			

AddOns support:
    -Added t_multi_addon: Works like current multis&addons but will not count towards the House's limit.
	It's just a type definition to alter how these items works inside 'real' multis, but the current items using it (ie: m_fountain_white) will work the same excepting that they won't create keys by default.
	
- Redeeding
	-Houses with search for TAG.DEED_ID to generate the new deed, if not value is set i_deed will be used, i_deed will be set by default on new placed multis.
    -Added Redeed(WO) fShowMsg, fMoveToCrate: Redeeds the multi to the OWNER's backpack (if there is no owner, there is no redeed).
        fShowMsg: if true shows the Bounce Msg for the deed.
        fMoveToCrate: if true places the Moving Crate item in the owner's bank instead of on his backpack.
    -Removing a t_multi or t_multi_addon will move all of it's items to the Moving Crate, move it to owner's Bank and Redeed the multi to it's owner's backpack.

-House Storage support:
    -BaseStorage(RW): Limit of storage allowed by default = 489 (Max 65535).
    -IncreasedStorage(RW): Increased % of storage allowed (Max 65535%).
    -MaxStorage(RO): Returns the maximum storage allowed: BaseStorage + ((BaseStorage / IncreasedStorage)/100) (Max 65535).
    -CurrentStorage(RO): Returns the current storage used.

    -BaseVendors(RW): Limit of Vendors allowed by default = 10 (Max 255).
    -MaxVendors(RO): Returns the maximum Vendors allowed: BaseVendors + ((BaseVendors / IncreasedStorage)/100) (Max 255).

    -LockdownsPercent(RW): Base percent of allowed Lockdowns (Max 255).
    -MaxLockdowns(RW): Total Lockdowns allowed based on MaxStorage: + ((MaxStorage / LockdownsPercent)/100) (Max 65535).
    eg:
        - Base Storage = 400
        - IncreasedStorage = 20%
        - MaxStorage = 480 (BaseStorage + ((BaseStorage / IncreasedStorage)/100))

        - LockdownsPercent = 25
        - MaxLockdowns = 240 MaxStorage - ( MaxStorage - ((MaxStorage * LockdownsPercent)/100))


-Added HouseType(RW): Set/Gets the house type (0 = private, 1 = public, 2 = guild)

-Doors placed as components now have t_house_door TYPEDEF applied as event.
-Containers placed as components now have t_house_container TYPEDEF applied as event.
-All components of each house now have t_house_component TYPEDEF applied as event.
-t_house_lockdown is added/removed from items when locking/unlocking them from the house.
Note: These events are applied on house COMPONENTS read from [MULTIDEF ], if you add any component ingame with AddComponent you will have to set them too.

Updated [sphere_defs.scp]:
    [TYPEDEFS]:
    t_multi_addon=201   // AddOns, the deed must have attr_magic to bypass placement checks and allow the addon to be placed inside houses.
    [DEFNAME house_types]
    house_private=0
    house_public=1
    house_guild=2
    [DEFNAME house_transfer_types]
    transfer_nothing	= 0		// Do not transfer any item to the Moving Crate, the crate will still be moved if uid is given.
    transfer_lockdowns	= 01	// Transfer LockDowns
    transfer_addon		= 02	// Transfer Addons
    transfer_all		= 04	// Transfer LockDowns, Addons and every other item found inside a house that is not a component of it.
        
Added to [MULTIDEF ]:
-BaseStorage (RW): Homologue to the House property BaseStorage.
-BaseVendors (RW): Homologue to the House property BaseVendors.
-LockdownsPercent (RW): Homologue to the House property LockdownsPercent.

-Changed: now t_multis will be saved too in spheremultis.scp along with t_multi_custom.

10-05-2018, Drk84
- Added @EffectRemove trigger for characters, 
	Argo: the spell item.
	Src: the caster.
	Default object: the target of the spell.
	Argn1: the spell number.
	Return 0: remove the spell memory item but don't execute the default spell behaviour when the spell item is removed.
	
  The trigger works similarly to @EffectAdd but is fired  when a spell memory item is removed (and after the @Destroy trigger of the item) 
  The trigger is needed if you plan to use return 0 in the @EffectAdd trigger, otherwise the default spell behaviour will be executed when the spell item get removed.
  Example
	I cast a curse spell and I have a return 0 in my @EffectAdd trigger, no default curse effect are applied but when the spell expires the curse item 
	will be removed and the spell target will get the additional stats from the expired curse! Using return 0 in @EffectRemove will prevent this
  Additional notes:
	Both @EffectAdd and @EffectRemove with return 0 can conflict with Poison and Poison Fields spells or scripts that call the poison function, that's because the
	poison status and effect is applied no matter what.
	For Summoning spells, returning 0 in @EffectRemove will prevent the summon to disappear. 

10-05-2018, Nolok
- Fixed: false-positive speedhack check when trying to walk on a disabled map.

11-05-2018, XuN
- [Port from Source, 07-02-2017, Coruja]:
- Fixed: Char flag 'statf_hovering' (gargoyle fly ability) not clearing when gargoyle chars polymorph into non-gargoyle char ID.

11-05-2018, Nolok
- Changed: disabled the usage of FORINSTANCES without an argument, since that's an unclear and error prone way to use it.
- Updated: Sphere now has a better logging of standard C++ exceptions, meaning better informations in the case of a pure C++ error.

12-05-2018, XuN
Expanded some Ship new features to Ships:
- Added AddShip uid(WO): Adds the given uid to the player's ship.
	If the player current count of ships is greater than the limit he has, the ship will be redeeded.
- Added DelShip uid(WO): Deletes the given uid from the player's list (Will not delete the ship)(-1 clears the whole list).
- Added Ships(RO): Return the ships on the player's list.
- Added GetShipPos uid(RO): Returns the position of the given UID on the ships list (-1 if not found).
- Added MaxShips(RW) to Accounts and Chars, when created they read this new setting from the sphere.ini (if values on sphere.ini change, they will not reflect on already created accounts/chars).
- Added REF to 'SHIP.x' to access the ship in the Nth position, eg: ship.3.Redeed, local.ship_p=<ship.1.p>
Note: Ships generated before this change will not be updated on the player's list, instead the player will still have the memory with color=MEMORY_GUARD (0x100)
linked to the ship,since there was no default behaviour other than this and each ship script handles it differently, there will be no hardcoded update
to the new system, each ship system should be updated according to it's behaviour (ie: removing the memory and setting AddShip <ShipUID>)

- Added MaxShips(RW) property for accounts, Default = Serv.MaxShipsAccount.
- Added MaxShips(RW) property for chars (meant for players), Default = Serv.MaxShipsPlayer.
* Setting MaxShips = 0 for Players will skip the setting and read it from it's Account.
* Setting MaxShips = 0 for Players and Accounts will allow to build without limit.


Houses and Ships:
Added a new ITEMDEF property MultiCount. Setting it to 0 will add no value towards the house limit (the house will be still present but not counted) and setting it to 3 (eg for castles) will count more for placement checks, etc

Cleaned up multi's placement checks and commented them.
Updated the checks too to work OSI like:
 - No chars can be inside the multi's rectangle.
 - The multi must have nothing blocking it in a +1 radius of its base rectangle
 - Additionally a +5 tiles check must be done on Top and Bottom preventing this house to block the entry of others (or the others to block this).

 13-05-2015, XuN
- Added support for CItemStone* (Guild and Towns) on multis.
- Added CMultiStorage to CItemStone so guilds/towns can have houses and ships (same syntax than for chars).
- Expanded key's generation to ships with a new ini setting.

- Added to sphere.ini:
	// Do ships generate keys automatically?
	AutoShipKeys=1

	// Max houses a guild can have (default 1).
	MaxHousesGuild = 1

	// Max ships a guild can have (default 1).
	MaxShipsGuild = 1

14-05-2018, Nolok
- Fixed: multiple party related exceptions.
- Fixed: calling RESTEST on a container item caused an exception.

15-05-2018, XuN
- Added suport for Secured Containers, added some ADDTOCALLSTACKs and removed fUpdateFlags from Un/LockItem.

- Added t_house_secure to Secured containers.

- Added Secure uid(WO): Adds the given uid to the Secure Containers list.
- Added Release(RO): Deletes the given uid from the Secure Containers' list (Will not delete the container)(-1 clears the whole list).
- Added GetSecuredContainerPos uid(RO): Returns the position of the given UID on the secure containers list (-1 if not found).
- Added GetSecuredContainers(RO): Returns the total count of secured containers.
- Added GetSecuredItems(RO): Returns the count of items inside all the secured containers (Just inside secured containers, not on locked containers).
- Added REF to 'SECURED.x' to access the secured container in the Nth position, eg: secured.3.count, local.access=<secured.1.tag0.access>

17-05-2018, XuN
- Fixed attr decay not being removed from locked/secured items, fixed wrong cals for SecuredContainersCount and SecuredItemsCount from their script counterpars and now locked items that are placed where a component is added via customize are moved to the Moving Crate.
- Added AddOn list and basic support like for the rest of the lists:
    - Added AddAddon uid(WO): Adds the given uid to the addon's list.
    - Added DelAddon(RO): Deletes the given uid from the addon's list (Will not delete the addon)(-1 clears the whole list).
    - Added GetAddonPos uid(RO): Returns the position of the given UID on the addon's list (-1 if not found).
    - Added GetAddonCount(RO): Returns the total count of addons.
    - Added REF to 'ADDON.x' to access the addon in the Nth position, eg: addon.3.components, local.id=<addon.1.defname>

Added @Redeed trigger for multis (t_multi, t_ship, t_multi_custom, t_addon)
    argn1=ID of the deed (Default=i_deed)
    argn2=1 (Default = 1). If set to 1 all items will be moved to the Moving Crate (and Addons redeeded).
    argn3=1 If set to 1 the Moving Crate will be transfered to Owner's Bank (if there is any).
        Note: the crate is moved to the OWNER's bank, not SRC.
        If argn2 = 0 then argn3 will be not used regardless of the value it has.
    SRC = Player doing the redeed (If Any). When the multi is being removed there is no SRC (also when an Addon is being redeeded from internal functions).
    ARGO = The deed.
    return 1 will prevent the deed from being created, but will not block the code from argn2 and argn3

Added @HouseDesignBegin trigger for t_multi_custom, called when the player enters on design mode
    argn1: If set to 1 Redeeds all addons on the multi. (Default = 1)
    argn2: If set to 1 Transfer all Locked Items and Secured containers to the Moving Crate (default = 0)
    argn3: If set to 1 Ejects from the house all chars inside the house excepting the player entering in design mode,
            if set to 2 Ejects everyone from the house
            if set to 0 doesn't eject anyone.
            All chars ejected will be moved to the House sign.
    return 1: Forces the char to exit Customize mode.
    WARNING: Forcing the char to exit here and setting argn1=0 in @HouseDesignExit will make it enter in customize mode, exit, enter... infinitelly, hence crashing the server with an infinite loop.

17-05-2018, Nolok
- Fixed: FORCONTTYPE wasn't working (issue #100).

20-05-2018, Nolok
- Fixed: triggers @UserUltimaStoreButton, @UserVirtue, @UserVirtueInvoke and @UserWarMode weren't firing (issue #102).

20-05-2018, XuN
Redeed now creates the deed before calling the @Redeed trigger and the deed gets renamed automatically.
- Added ARGO to @Redeed trigger, being argo the deed.
- added to sphere_msgs 'DEED_NAME': "Deed to a %s"
- Fixed placed houses being moved 1 tile east from where they should.

22-05-2018, Nolok
- Fixed: FORINSTANCES caused an exception in Nightly builds, but not in the Debug ones (issue #88).

25-05-2018, Drk84
- Changed: The defmessage DEFMSG_COMBAT_ATTACKO (*%s is attacking %s!*) will use the EMOTE_DEF_COLOR setting found in sphere_msgs.scp instead of always use the gray color hue.

26-05-2018, Nolok
- Fixed: COMBATF_PREHIT didn't fire the triggers in the correct order, also fixed a possible exploit while using PreHit (issue #108)
- Added: COMBATF_PREHIT_NORANGE to allow starting the close-combat swing at distance; the blow will still be landed only when entering in range.
- Fixed: After each combat hit the current combat skill was halted (actually it failed), then the same action was started again. This resulted in
	the @Fail, @SkillFail, @Start, @SkillStart triggers to be fired at each hit.
- Fixed: NPCs doing extra AI actions (wandering, food, etc checks) after each hit in combat. This caused sometimes the current combat action to be resetted
	and then forced again, erasing the NPC combat data, which ultimately results in the NPC hitting twice in a few tenths of seconds.

13-06-2018, Nolok
- Changed: reverted the combat animation to not being "smooth". Now by default the swing animation has a fixed duration of 1 second (minimum anim delay/duration possible) and then the char waits the recoil time
	before being able to start again the combat swing. This is done to match OSI style. The "underground" work is different now and it is working in this way: first a timer is started to wait for
	the recoil time	(ARGN1 in @HitTry). When the timer has ended, the combat swing animation starts, also the timer is started again, but to wait for the animation to end (anim and timer duration are equal to
	LOCAL.AnimDelay in @HitTry, and the default value is 1 second). Ended this second timer, the damage is dealt (Issue #111).
- Added: .ini CombatFlag COMBAT_ANIM_HIT_SMOOTH to enable the old smooth combat. There's no delay between hits (in @HitTry LOCAL.AnimDelay is = 0), but the swing animation duration
	(ARGN1 in @HitTry) is in this case equal to the delay you should have waited before starting a new swing.
- Fixed: COMBAT_PREHIT wasn't working correctly (Issue #113, #108).
- Changed: .ini CombatFlag COMBAT_PREHIT_NORANGE renamed to COMBAT_SWING_NORANGE, to avoid confusion with COMBATF_PREHIT.
- Added: LOCAL.Swing_NoRange to @HitCheck trigger. -1 force disables the Swing_NoRange behaviour for the current hit, 0 leaves it dependent to the COMBAT_SWING_NORANGE ini CombatFlag,
	while 1 force enables the Swing_NoRange behaviour (Issue #112).
- Added: RETURN -2 into @HitCheck trigger continues the execution of the default combat code. This is useful if you want to use @HitCheck to only change LOCAL.Swing_NoRange.

20-07-2018, XuN
Multis:
- Changed COMPONENTS to COMPS (and all the relative keywords: getcomponentpos -> getcomppos, component.x -> comp.x, etc)
- Fixed Components from multis messing with Components from multidefs, hence crashing when trying to access them(like when deleting the multi).
- Fixed nuke/remove doing random crashes on multis: Redeed is not being called when removing the multi anymore, if you want a full redeed call it before removing.
- Added House_Priv defnames:
    HP_NONE         = 0
    HP_OWNER        = 1
    HP_COOWNER      = 2
    HP_FRIEND       = 3
    HP_ACCESSONLY   = 4
    HP_BAN          = 5
    HP_VENDOR       = 6
    HP_GUILD        = 7
- Changed AddHouse and AddShip to accept a second parameter as HOUSE_PRIV, default HP_OWNER, to have control over the privileges (this affects new saves).
    To change a priv from OWNER to COOWNER (as example) use AddHouse house_uid, HP_COOWNER (or AddShip), it will replace the current value with the new one.
- Changed Seting MovingCrate / Owner / Guild to 0 will empty the house value also for list-based values: Coowners, Friends, Bans, Vendors, Accesses ...
- Removed the needing of @Destroy for several house related items (Comps, MovingCrate, LockDowns, Secured Containers...) to delete the item from the house list by adding pointers back on CItem,
    CItemStone and the update to CHouseStorage
- Added 'e_house_priv' for chars who have any kind of priv on any house, also e_ship_priv for ships.
- Added RevokePrivs char_uid for multis (house and ships) to revoke any House_Priv to that char on the multi (excepting, of course HP_GUILD).
- Fixed when setting a new priv RevokePrivs will be called and then the privs will be added, in order to remove the char from previous list (if had any privilege before on this multi).

23-07-2018, Drk84
- Added: effectLocation command, similar to the EFFECT command but instead of an object it takes a terrain location as a target.(Thanks to XuN for the help)
	Some of the new spells use effects that are placed  on the ground (not field items) for simulating an area of effect.
	Usage: effectLocation x,y,z,type,itemid,speed,loop,explode,color,render
	Examples:
	//Simulate the Consacrate Weapon Chivalry spell effect, a sword appearing from the ground and going upward.
	[FUNCTION testLocationZ]
	effectLocation <p.x>,<p.y>,<height>+1,0,i_sword_long,1,0,0,colors_red,3

	//Simulate a field of energy centered at the target.
	//argv0 x offset, argv1 y offset
	[FUNCTION testLocationField]
	if <isempty <args>>
		args = 1,1
	endif
	local.pX = <p.x>
	local.pY = <p.y>
	local.pZ = <p.z>
	FOR X <eval <local.pX> - <argv0>> <eval <local.pX> + <argv1>>
		FOR Y <eval <local.pY> - <argv0>> <eval <local.pY> + <argv1>>
			effectLocation <local.x>,<local.Y>,<local.pZ>+<argv2>,2,i_fx_energy_field,1,0,0,colors_red,3
		ENDFOR
	ENDFOR
  Notes:
  If the effect Type is 1 (Lightning) or 3 (Effect at object level) the effect will not be played, only effect 0(bolt) and 2(ground level) seems valid, probably
  cause they don't accept a map point.

- Added: Spells with the LAYER property set to >= LAYER_SPELL_STATS will automatically equip the spell memory item found in the RUNE_ITEM property.
	Before this commit, if you wanted to make a custom spell (or scripts the chivalry, mysticm, spelleweaving spells) you had to manually equip the memory item
	causing the triggers @EffectAdd  and @EffectRemove to never be fired.
- Changed: Meditation skill now take in consideration the EFFECT property of the skill, if the EFFECT property is not present the default value of 1 is used.
- Added: Added new flag value 080 for CombatParryingEra, setting this flag will allow to use the following parrying skill behaviour:
	The flag will enable the old AR parrying formula, instead of gaining  a flat 7% of the Shield Armor value the Parrying skill of the character is taken in consideration according to the
	following formula:
	Displayed AR = ((Parrying Skill * Base AR of Shield) ÷ 200) + 1
	The maximum AR reachable is: Base AR of Shield / 2.
	More information: http://web.archive.org/web/20000306210936/http://uo.stratics.com:80/parr.htm
	Notes
	By default the ARMOR value of the Shields item is commented, so you need to uncomment them.
	The formula works only with Combat Elemental Engine disabled.
	Setting or unsetting this flag while the server is running will update the character armour value only when the Parrying skill changes or the shield item is equipped/unequiped.

28-07-2018, Nolok
- Added: LASTEVENTWALK read-only client property, to retrieve the time in ticks (SERV.TIME) of the last allowed walk request from the client.
- Added: CONTAINERMAXITEMS ini setting. It holds the maximum number of items inside a container, which is by default (and can be at most) 255. Higher values are unsupported by the Classic Client
	and the older 2D client versions. The Enhanced Client supports a maximum af 125 items per container, so it's suggested to update this setting if you are going to use that client.
- Fixed: Switching weapon while attacking didn't abort the previous swing (Issue #108).
- Fixed: Hit chance (ACTDIFF) wasn't recalculated after each combat swing (Issue #116).

01-08-2018, XuN
- Changed BonusHits/Stam/Mana to increase ModHits/Stam/Mana instead of the real stats
- Fixed tooltips not sending data
- Fixed ship redeeds creating normal deeds instead of ship plans.

02-08-2018, Nolok
- Fixed: File I/O functions messing up line numbers, for example reading the wrong line (Issue #95).

04-08-2018, Nolok
- Fixed: Shop items' name shown with the wrong language if the client localization wasn't english.

06-08-2018, Nolok
- Fixed: Spells with SPELLFLAG_TARG_XYZ had a different target maximum range (14) than spells with other TARG spellflags (caster's VisualRange) (Issue #117).

08-08-2018, Nolok
- Fixed: When the date changed, a new log file wasn't created (Issue #114).
- Added: Tooltips for items with attr_NoDrop and attr_NoTrade.
- [Port #53 from Source, 17-06-2016, Coruja] Fixed: Paralyze / Paralyze Field making NPCs flood too many attack actions.
- [Port #54 from Source, 22-06-2016, Coruja] Added: Support for colored multis on target functions (only compatible with HS clients 7.0.9.0+)
	-Target functions can set the multi color using TARGETM [multiID, color] and TARGETFM [function, multiID, color]
	-Target will inherit the deed color when got triggered from a deed

15-08-2018, Nolok
- Added: now sphere caches tiledata.mul content into memory at startup. This avoids reading an enormous amount of times the file on the disk, which is a slow operation,
	giving a significant performance boost. This is especially true in crowded areas, where a lot of Line of Sight checks are done.
- Fixed: the script caching wasn't working as intended, now the scripts and saves loading and the scripts execution is a lot faster. Technical details are on git commits descriptions.

16-08-2018, Nolok
- Added: the world save and the deletion of the previous save is now skipped if there's not enough available space (at least 20% of the previous saves size).
	This avoids the corruption or loss of old saves if there's not enough space on the disk.
- Fixed: multi (ships or houses) keys were only added to the bank, without adding a copy on the backpack.

22-08-2018, XuN
WARNING: The part of this commit regarding TIMERs has been reverted because of the big timers overhaul started with the 28-09-2018 commit.
[
- Changed tick periods from 0.1s to 0.25s, read https://github.com/Sphereserver/Source-experimental/issues/125 for more information.
- DEPRECATED TIMERD, a warning will be shown each time it's used.
- ADDED TIMERT timing each TICK.
	WARNING! TIMERD is NOT the same as TIMERT, while TIMERD=10 was meant to tick in one second, TIMERT=10 will tick in 4 seconds, so it should be TIMERT=4 to tick in a second (0.25*4)
]

- Removing multis now removes all of it's components by default (doors, signs, tiller, etc) but not lockdowns or other personal items.

22-08-2018, roberpot
- Added REVEALF_OSILIKEPERSONALSPACE: If set, invis characters will be not revealed when another character enters personal space, and no message will be sended to character who entered.

23-08-2018, XuN
- Changed HOUSE_TRANSFER definitions, reordered them for better compatibility over time and added a new TRANSFER_SECURED for secured containers:
[DEFNAME house_transfer_types]
transfer_nothing	= 0		// Do not transfer any item to the Moving Crate, the crate will still be moved if uid is given.
transfer_all		= 01	// Transfer LockDowns, Addons and every other item found inside a house that is not a component of it.
transfer_lockdowns	= 02	// Transfer LockDowns.
transfer_addon		= 04	// Transfer Addons.
transfer_secured	= 08	// Transfer Secured Containers.

- Extended Multi_IsPartOf() method to accept items on lists and not only linked items.
- Improved TransferToCrate function:
    - It now moves every item stored in all lists before doing the raw area search (some new lists added before the method were not added).
    - Also improved the checks on the search function to do the most probable finds first.
    - Added new param TRANSFER_SECURED for Secured Containers.
    - It only has one parameter: transfer_flags
- Fixed <MovingCrate 1> not creating a new Moving Crate, hence all the custom <MovingCrate*> code not working because there's no way to create a new one.
- Fixed Custom Multis crashing the server on loading.

24-08-2018, XuN
- Added missing VirtualGold currency on status when FEATURE_TOL_VIRTUALGOLD is enabled.
- GOLD and <GOLD> will work as VirtualGold and <VirtualGold> when FEATURE_TOL_VIRTUALGOLD is enabled (but the real money chars had before, if any, will not be removed).
- Fixed wrong char sent on PacketObjectStatus when opening a new shop menu, hence not correctly showing the player's gold until a new packet updated the status.
- Added region change support for ships, @Enter and @Exit will be fired on the regions they enter and leave (only them not characters inside, as always they will get it when landing from the ship)
- Added @RegionEnter and @RegionLeave trigger for ships and the homologue @itemRegionEnter and @itemRegionLeave for chars BUT only working for ships.

28-08-2018, XuN & Nolok
- Changed: IMPORTANT! Due to a recent change of the tooltip engine, which grants better performance, the tooltips are now cached on the character or item instead of being
	generated each time for each player. This means that ADDCLILOC needs to be called on the object, instead of on the player. So in the scripts, in the @ClientTooltip trigger,
	calls to SRC.ADDCLILOC have to be changed to ADDCLILOC; in @ItemClientTooltip and @CharClientTooltip, ACT.ADDCLILOC has to be used instead.

30-08-2018, Nolok
- Changed: Sphere internal clock now stores the time in milliseconds, instead of in tenth of second (which was good until the amount of ticks per second was fixed to 10).
	This makes the internal timer independent from the ticks per second and also should solve Issue #132.
	SERV.TIME is still returning the internal time in tenth of seconds, to keep backwards compatibility.
- Added: SERV.TIMEHIRES, which returns the internal timer in milliseconds.
- Added: SERV.TICKPERIOD, to show how much server ticks are in a real-world second.
- Fixed: ShipSpeed.period (tenths of second between each ship movement) not working as expected.
- Fixed: While sailing on the debug build, flashing spots were supposed to be shown where the next movement would move the ship
	(so, if moving on those tiles would make a valid movement).
- Changed: Made Read-Only SERV.CREATE, SERV.LASTVALIDDATE, SERV.LASTVALIDTIME, CREATE char and item property.

18-09-2018, XuN
- Added: TIMERMS to set an object timer to elapse after the given number of milliseconds.

28-09-2018, XuN
- Updated the whole code to cleanup latest changes regarding timers.
- Added new CTimedObject class to control the whole timer's behaviours from now on.
- Updated some classes (CObjBase, CChar, CItem (and it's childrens)) to inherit from CTimedObject (still more to come ... CTimedFunction, CMapBlockCache, etc).
- Updated world's ticking procedure:
    Removed the old world->maps->sectors->items/chars huge loop for ticks
    CTimedObject add/deletes the objects into a new listing with msec precision timers which CWorld reads constantly looping only throught what really needs to tick.
- Updated some code messing with timers on latest commits and making them behave wrongly.
- Changed sector's behaviour to be ticked until their SectorSleep period (if any) has passed and pausing/resuming all items/chars timers inside (similar to what it did before).
- Splitted CChar's ticks into the real ticks (the code relying on SetTimeout) and the periodic tickings (into a new OnTickPeriodic) involving stats regens, death check, steps on items, etc
- Added a new list on CWorld for chars inserting all npcs by default on their create and players when login, and removing them when proceed, to do constant updates on hits, etc.
- Fixed regens ignoring the delay set.

01-10-2018, XuN
- Fixed some crashes and removed some debug msgs from last commit(s).
- Changed Ship's movement to a new CCMultiMovable class
- Added CCMultiMovable class to all multi objects so now every multi can move like a ship without external scripts.
    - In order to move, all movable multis need ShipSpeed.period and ShipSpeed.tiles to be higher than 0.
    - Also the house that can move needs the spk_ship_cmds speech on them for player speech (if giving support for speech) also since the multis doesnt have direction like ships, it's direction is inverted:
        Forward will move to the south
        Left will move to the right
        Right will move to the left
        Back will move to the north
    - Since the movement is set via 'timer', any house that can move will try to move instead of expire on it's ON=@Timer, so if you want a house that move and decay use timerf for the decay.

03-10-2018, Ben
- Fixed emote messages for players using wrong hue.

12-10-2018, XuN
- Fixed more time related issues.
- ADDED: tag.override.movedelay (msec) for NPCS overriding completelly the moverate checks and setting the next movement to the given timer, eg 'tag.override.moverate=250' makes the npc move each 250 milliseconds when walking.
    Notes:  * The final value, with or without tags, running or walking, can't be lower than 1 tenth of second or higher than 5 seconds for the moment until we check the performance impact of lower values (Since walking is direcly engaged with NPC's AI, lowering this value can cause an extreme impact on performance)
            * This is the walking speed, running speed and walking speed while mounted is the half (125 instead of 250 msecs using the previous example), running while mounted is 4 times faster (62.5msecs (rounded to 62), defaulted to 100 because of the tenth's limit)).
            * Settig this tag completelly overrides default moverate checks, TAG.OVERIDE.MOVERATE gets ignored too.

Here's the code to make NPCs move with the old formula (before 2014) (it's also an example of how to make custom movement formulas):
// function setting the tag to the desired value
[function f_adjust_movement_delay]
local.dex=<dex>
if ((<flags> & STATF_pet) && (<local.dex> < 75))    // for pets ...
    local.dex = 75  // ... set the lowest movement delay to this dex value.
endif
local.newdelay = (10 + <r(100-iDex)/3>) * 100   // * 100 because the old formula worked in tenths of second, this tag works in msecs (100 msecs = 1 tenth = 0.1s)
//If you want enable support for tag.override.moverate in this formula uncomment the bellow lines:

//local.mod = <tag0.override.moverate>
//if (<local.mod> < 1)
//    local.mod = 1
//endif
//local.newdelay = (<local.newdelay> * <local.mod>) / 100

//end of tag.override.moverate code
//setting the new value:
tag.override.movedelay = <dlocal.newdelay>

Now we set the tag like this:
ON=@Create
STR=xx  (custom npc's values)
DEX=xx
INT=xx
f_adjust_movement_delay

It would be recommended to apply this function also on Taming's success, because pets will never have a base movement value calculated with less than 75 dex
The lower calls to this function, the better (as for any other), but other formulas (like AI reworks) may need to call it in each @SkillStart/Success/Fail or other cirtumstances.

19-10-2018, Nolok
- Fixed: SHRINK command always bouncing the figurine (Issue #138).
- Fixed: Items disappear in trade menu when both players are overweight (Issue #124).

20-10-2018, XuN
Added: Now Sectors store their adjacent sectors:
    When a sector awake, all of it's adjacent awake too to avoid the awakening effect for clients (all spawns generating NPCs at once, NPCs starting to move at once, etc)
    When a sector try to sleep, it checks if the adjacent can't sleep to minimize more the awakening effect.

21-10-2018, Nolok
- Fixed: Items in trade window being lost if a world save occurred during the trade process and the server was restarted, loading that save.
- Fixed: NPCs sometimes lost the focus on their enemy during combat.

23-10-2018, Nolok
- Fixed: Gaining parrying skill regardlessly from CombatParryingEra and the ability to actually parry the blow.
- Fixed: With COMBAT_ANIM_HIT_SMOOTH, in @HitTry ARGN1 and LOCAL.AnimDelay showed the wrong values (they were inverted).
- Fixed: NPCs had not enough motivation to fight back a brain_berserk NPC of the same kind, so they kept running away or wandering.
- Fixed: On Windows, if Sphere's window is closed during the scripts loading, the whole process will now be halted. Before, the loading proceeded and the server was halted only at the startup completition.

24-10-2018, Nolok
- Fixed: When a char was overweight it could equip multiple items on one layer (Issue #143).
- Fixed: The minimum combat animation delay with COMBAT_ANIM_HIT_SMOOTH on was 0,1 s instead of 1 second.
- Fixed: Now equipping a light source item doesn't check the CAN flags.
- Added: Now it's possible to change an item's CONT in @DropOn_Self when the trigger is fired via a drop client event (before it worked only if fired by the BOUNCE keyword).
	If a RETURN 1 is performed and a new (different) CONT has not been set via scripts on the trigger call, the item drop event fails as before, otherwise the item is left in the new CONT.

28-10-2018, Nolok
- Fixed: Players could cast spells even when paralyzed or stoned (Issue #135).
- Fixed: When Game Masters casted a spell with a wand or a scroll, they were consumed.
- Added: ini MagicFlag MAGICF_CASTPARALYZED, to be able to cast even if the character is paralyzed.

29-10-2018, Nolok
- Changed: CAN_I_BLOCKLOS flag (which works only if ADVANCEDLOS is enabled) now blocks the Line of Sight regardlessly of the height of the viewer and of the item being checked.
- Added: CAN_I_BLOCKLOS_HEIGHT flag (which works only if ADVANCEDLOS is enabled) which does what CAN_I_BLOCKLOS actually did in the past: it blocks the LoS only if the item is too high for the char to see above it.
- [sphere_defs.scp]: Added the def: CAN_I_BLOCKLOS_HEIGHT (04000000).
- Fixed: CanSeeLOS, when AdvancedLOS is enabled, read the dynamic item CAN flags from its base itemdef instead of its actual CAN flags. Example: if i created a i_dagger_super item with ID=i_dagger, CanSeeLOS checked i_dagger
	CAN flags instead of the ones from i_dagger_super. Now it supports also flags modified by CANMASK.

31-10-2018, Nolok
- Changed: Stats maximum value extended from 32767 to 65535 (maximum value actually supported by the client) (Issue #75).
- Fixed: Stats regen timers were broken.

01-11-2018, Nolok
- Fixed: Client-side bug when attempting to drag a corpse (Issue #142). If a player with GM on sees a new corpse, then turns GM off and tries to drag it,
	the dragging is cancelled but the corpse will take the appearance of an ogre until a new UPDATE.
- Changed: Default value for SpeechColorOverride changed from SAY_DEF_COLOR (52) to 0. There aren't any compatibility issues with previous save files, since SpeechColorOverride was only saved if different from the default value (Issue #134).
- Changed: SpeechColorOverride now works for both NPCs and Clients. SpeechColor is now an invalid property for an NPC, but for a Player it is as always the last speech hue sent by the client.

02-11-2018, Nolok
- Added: ModMaxHits, ModMaxMana, ModMaxStam properties. To avoid CONFLICTS, remove or comment the scripted functions with the same name in the sphere_events_npcs.scp of the default scriptpack.
- Added: @StatChange fires also when a ModMax* property changes. ARGN1 = 12 for ModMaxHits, 13 for ModMaxMana and 14 ModMaxStam.
- [Port from Source, 12-01-2017, Coruja] Fixed: FeatureSE setting on sphere.ini not working correctly.

03-11-2018, Nolok
- Fixed: Broken BTFISH encryption/decryption (used by clients <= 2.0.3 and >= 2.0.0x) and wrong login encryption/decryption algorithm chosen for some old clients < 2.0.0x.
- Added: Initial support for very old clients (< 1.26.4) which use the same rotation cypher for both login and game server encryption.
	Those clients require also a precise sequence of packets to be received and there isn't much documentation around. For now, some of them (tested with 1.25.35) work until after the character selection.
- [SphereCrypt.ini] Added keys up to Classic Client 7.0.73 and Enhanced Client 4.0.73. Added keys for some old clients between versions 1.23.27 and 1.26.4.

7-11-2018, XuN
Added IsSleeping (Read Only) function for sectors, items and chars.
Added Sleep and Awake functions (Write Only) for sectors (Sleep will do it's normal checks before sleep, Sleep 1 will skip these checks).
NOTE: Sleep will not work if the sector is already sleeping and Awake will not work if the sector is not sleeping.
NOTE: Awake will awake the sector, tho it will insta sleep again since it checks for clients or how much time passed since it's last client departed from it (compared against SectorSleep .ini value). This can be used to force all items inside to tick.
Added CanSleep function (Read Only) for sectors to check wether a sector can Sleep or not (use CanSleep 1 to check for adjacent's sectors too (source checks does it like this)).

11-11-2018, Nolok
- [Port from Source, 15-02-2017, Coruja] Fixed: Enhanced clients not updating backpack content on death.
- Added: Error console message when trying to load from the saves a char attached to an invalid account.
- Added: Error console message when trying to define a resource (itemdef, chardef, etc) with an invalid ID (> 03FFFF), instead of letting sphere throw an assertion failure.

14-11-2018, Nolok
- Fixed: SERV.TIME and SERV.CREATE returned the time in hundredths of second instead of in tenths of second; SERV.AGE reported a wrong value due to a wrong time conversion.
- Fixed: Chars sometimes couldn't fight after the server restart if COMBAT_PREHIT was on.
- Fixed: COMBAT_SWING_NORANGE wasn't working as intended.
- Fixed: MinCharDeleteTime ini value wasn't read correctly.
- Fixed: For damageable items (CCItemDamageable) status update, hits regen rate was used instead of the ItemHitpointsUpdate ini setting.
- Fixed: Regen rates were incorrectly converted from seconds to the internally used milliseconds, breaking them.
- Fixed: Food stat still used internally a signed short instead of an ushort data type, limiting its max value.
- Fixed: Stats and derived values still had somewhere the limit of a short type instead of using a ushort.
- Changed: Stats and maxstats mods could only have a value between 32767 and 32767, changed it to -65535 and 65535 (which is the actual new stat limit).
- Fixed: Vendors restocked after a wrong amount of time.
- Fixed: The time required to wait before another potion use was of 1,5 seconds instead of 15.

15-11-2018, Nolok
- Fixed: T_SPAWN_ITEM spawning templates and T_SPAWN_CHAR spawning spawn groups didn't correctly load the id of the resource to spawn from the save file (Issue #153).

23-11-2018, Nolok
- Added: BCrypt string hashing and string validation (Issue #109). Usage:
	- "BCRYPTHASH prefix code, cost-factor, string" returns the hashed string.
		Prefix code: 0 for "$2a$", 1 for "$2b$", 2 for "$2y$", 3 for "$1$", 4 for "_".
		Warning: higher cost-factors (minimum 4, maximum 31) means way slower hashing, which can even block Sphere!
	- "BCRYPTVALIDATE string, hash" returns 1 if the hash matches the string, otherwise 0.

27-11-2018, Nolok
- Fixed: Setting a TAG with a quoted numerical value didn't force it to treat the argument as a string.
- Fixed: Everytime a player opened a buy/sell gump, the vendor had a forced restock.

09-12-2018, Nolok
- Added: GO command now accepts the map index as a second argument. It's useful when there are more places with the same name, but located in different maps.
	Example: "GO britain, 0" teleports to Britain in map0, "GO britain, 1" teleports to Britain in map1 (if that region is defined in the map script file).
- Fixed: Every worldgem bit (so also the resource bits) was treated as spawn items.
- Fixed: Spawns didn't accept 0 as MAXDIST, in that case they defaulted it to 1 (Issue #156).
- Fixed: Every new account was created with the HEARALL flag on.
- Fixed: Resource gathering skills (fishing, lumberjacking, mining), had inverted ACTARG1/2/3, so that setting one of them via scripts didn't change the expected value, breaking the skill operation (Issue #158).
- Changed: talkmode_system (0) to talkmode_say, talkmode_prompt (1) to talkmode_system, as it should be according to the packet guides (moreover, if you try to send a colored text to the Enhanced
	Client with a talkmode different from 0, which is the correct "talk" mode, the client will ignore the color and use its default one).
	Also, Sphere in some cases used talkmodes 3 (old talkmode_say) and 4 (old talkmode_obj), which behave as the correct talkmode_say (0) and aren't reported as valid talkmodes by any packet guide,
	so they got removed and replaced with talkmode 0.
	As result, defs MSG_DEF_COLOR, MSG_DEF_FONT, MSG_DEF_UNICODE aren't used anymore.
- Added: AutoProcessPriority ini flag, to automatically set the process priority at the startup. Check the ini for more informations.

11-12-2018, Nolok
- Fixed: When smooth sailing was on, the screen wasn't updated smoothly.

13-12-2018, Nolok
- Fixed: Craft menus shown a wrong title (Issue #164).
- Fixed: SPEECHCOLOR wasn't recognized as a valid keyword (Issue #163).
- Fixed: Stat regens working also on dead players (Issue #160).
- Fixed: Archery butte not usable by players ("You can't reach that") (Issue #159).

16-12-2018, Nolok
- Added: Option flag OF_NoTargetTurn, to avoid the char to turn against the targetted point.
- [Port from Source, 02-08-2018, Coruja]
	Changed: Internal improvements on Teleport / Recall / Gate Travel spells.
		- Gate Travel now will use proper blue/red moongate ITEMDEFs instead always use blue moongate changing its color when needed
		- Gate Travel now will link moongates to each other based on UID instead MOREP. This will make possible cast Gate Travel inside moving boats (if multi region flags allow cast it)
- [Port from Source, 05-08-2018, Coruja] Added: EFFECT function now supports client fade screen effect (EFFECT 4,[0-4]).
	NOTE: It can be used only directly on client chars and requires client >= 6x]
- [Port from Source, 06-08-2018, Coruja] Fixed: Tooltips not updating correctly when TooltipMode=1 is set on sphere.ini.
- [Port from Source, 08-08-2018, Coruja] Fixed: EFFECT_ID/SOUND not working correctly on some spells.
- [Port from Source, 01-09-2018, Coruja]
	Changed: When enhanced clients drop items on container grid index already in use, the item now will be placed on next available index (OSI style) instead first available index starting on 0.
	Fixed: Enhanced clients showing wrong hitpoints color on health bar.
	- [Port from Source, 04-09-2018, Coruja] Fixed: Optional flag OF_NoDClickTurn on sphere.ini affecting target-based actions (now it will affect only DClick actions, as the name suggests).
- [Port from Source, 25-09-2018, Coruja] Added: New function CODEXOFWISDOM to open client Codex of Wisdom menu at given topic ID.
	Syntax: CODEXOFWISDOM TopicID (1~176), [ForceOpen (0/1)]
- [Port from Source, 01-11-2018, Coruja] Added: Support for new Whip weapon type.
	
17-12-2018, Nolok
- [Port from Source, 04-07-2018, Coruja]
	- Added: Support for 'EquipLastWeapon' client macro.
	- Changed: Reduced DClick/PickUp_Ground reachable distance [3 tiles -> 2 tiles] to match client internal DropOn_Ground distance.
- [Port from Source, 21-07-2018, Coruja]
	- Added: Support for 'combat ability' (@UserSpecialMove) and 'virtue' (@UserVirtue) slots on KR toolbar (@UserKRToolbar).
		NOTE: KR clients still obsolete and not supported, but triggers will be called if someone want use it
	- Fixed: FOR loop not working correctly when range value is negative.

23-12-2018, Nolok
- Changed: now most of the dynamic (in the C++ source) properties (like DAMFIRE, MANABURST, HITAREACOLD, SPELLCHANNELING...) are internally stored in a different and faster kind of container.
	For this purpose, the classes CEntityProps, CComponentProps and the relative specializations were created. Think at each ComponentProps as a container, which can hold specific kind of properties and generate the related tooltips.
	For example, CCPropsItemWeapon can hold the properties MAGEWEAPON, USEBESTWEAPONSKILL, etc, CCPropsItemEquippable can hold FASTERCASTING, RESFIRE, etc. For items, the right ComponentProps are attached when their TYPE changes.
- Changed: PROPLIST now shows also the properties stored in ComponentProps, preceded by the name of the component inside square brackets.
- Added: BASETAGLIST and BASEPROPLIST, which output the tags and the props stored in the Base Def block (Chardef/Itemdef...).
- Added properties (only the keyword, no functionality for now) for:
	- Items: LavaInfused, Prized, ShipwreckItem, Unlucky, Unwieldly.
	- Weapons: Antique, AssassinHoned.
- Removed properties: BonusHitsMax, BonusStamMax, BonusManaMax.
- Changed: RANGE is now a dynamic script property, meaning that it can be changed per-instance and is no longer a base-only prop.

27-12-2018, Nolok
- Fixed: New player starting with TIMER=0 and couldn't finish any action (Issue #171).
- Changed: Removed AutoTooltipResend ini setting.
- Fixed: Tooltips not refreshing fast enough (Issue #170).
- Fixed: ARGN1 was in ms in trigger @DROPON_GROUND (Issue #168).
- Fixed: Now RANGEL stores the lowest range value, and RANGEH the highest. It was inverted again in the past, no idea when.

28-12-2018, Nolok
- Fixed: MOVE and MOVENEAR not removing from the screen the object if it was moved farther than the player view distance.
- Fixed: MOVENEAR always sent an UPDATE for the moved item, independently from the 3rd argument's value.

28-12-2018, Drk84
- Added: Detecting Hidden skill can use the values stored inside the EFFECT property, these values are used for determining the search radius.
	If EFFECT is not defined in the SKILL definition the default formula is used:
	SearchRadius = DetectingHidden / 100
	Examples:
  		With an EFFECT value of 20 we will always search inside a 20 tiles radius, no matter the skill score.
		With an EFFECT value of 1,20 the search radius will vary from 1 to 20 depending from the player skill score.
		If EFFECT is not defined and we have 90.0 in DetectingHidden the search radius will be 9 (900/100, this is the default behaviour).
- Added: Tracking skill can use the values stored inside the EFFECT property, these values are used for determining the tracking maximum distance.
    If EFFECT is not defined in the SKILL definition the default formula is used:
	MaximumDistance = Tracking / 10 + 10
	Examples:
		With an EFFECT value of 20 the maximum tracking distance is 20 tiles, no matter the skill score.
		With an EFFECT value of 10,100 the maximum tracking distance will vary from 10 to 100 tiles depending from the player Tracking skill.
		If EFFECT is not defined and we have 90.0 in Tracking Skill the maximum tracking distance will be 100 tiles (900 / 10 + 10, this is the default behaviour)	
	Notes
		When using the Tracking skill, the maximum distance is stored in ACTARG2, this means that the value can be changed in the @PreStart, @Start and
		@Stroke triggers, but because the maximum distance is calculated after @Select and before @PreStart changing the value in @PreStart and @Start will take
		effect on the next @Stroke trigger.

29-12-2018, Nolok
- Added: f_onaccount_pwchange now has a LOCAL.OLDPASSWORD storing the old password, before the requested change is done.

01-01-2019, Nolok
- Added: DEFNAME readable property to ROOMDEF (Issue #174).

02-01-2019, xwerswoodx
- Added: strToken function to tokenize strings. Instead of explode, this function does not override commas so you can get strings with commas without having any problem.
	Usage:
		<strToken "<args>", "value", "seperator">
	Seperator:
		Character for tokenize array. Usage is same with explode, could be " " for space, "," for comma, or just character for any char.
	Values:
		0: Return length of the token.
		Number: Return specific element of string.
		startNumber-endNumber: Return specific elements with range.
	Examples:
		<strToken "A.B.C", 0, .> RETURNS 3
		<strToken "A.B.C", 2, .> RETURNS B
		<strToken "A.B.C", 1-2, .> RETURNS A.B
		<strToken "A,B.C", 1, .> RETURNS A,B

03-01-2019, Nolok
- Fixed: ExperienceMode 08 flag (don't go below the current level when losing exp) didn't work (Issue #167).

05-01-2019, Nolok
- Fixed: Sometimes setting a spawn's SpawnID to a spawn group or a template generated bad spawn point with an invalid SpawnID (Issue #179).

06-01-2019, Nolok
- Changed: Now the resync won't reload again tiledata.mul and verdata.mul and it won't index again the client files, since those files were already write-locked while Sphere was running.
- Fixed: The feature of auto-generating a defname for malformed AREADEFs lacking a defname but having a name set wasn't working.
- Fixed: PacketDeathAnimation caused an invalid packet to be sent (Issue #181).
- Fixed: Server not sending to client a Season Update packet after resurrection, so it still shown the "desolated" season (Issue #182).
- Removed: TIMERT keyword, just continue to use TIMER and TIMERD as always (and the new TIMERMS if fits your purpose). The "tick" for world objects isn't a concept since some time,
	for more infos check in this changelog for the 28-09-2018 commit (Issue #125).

07-01-2019, Nolok
- Fixed: The death status packet (sent by the client when the server sent the complementary packet, enabled with the PacketDeathAnimation ini setting) was incorrectly parsed,
	desynchronizing the input packet queue and making Sphere think it was receiving malformed or unknown packets (Issue #181).
- Fixed: Tooltip info for spawns.
- Fixed: PacketScreenSize (0xBF.0x05) parsing incorrectly the received data.
- Added: Packet UseTargetedSkill (0xBF.0x2E) functionality.
- Added: In debug builds, when an unknown packet is received, its data is dumped to the console and to the log.
- Fixed: EFFECT with id of 4 caused an exception.

09-01-2019, Nolok
WARNING: the following change could break some hackish expedient used in scripts! Read carefully!
- Changed: Defname numeric value has a different byte order now. For example, <hval s_clumsy> returned 0ce000001, so you could retrieve the spell number by doing <hval s_clumsy&(~0ce000000)>,
	which removed the resource type bits. Now <hval s_clumsy> returns 082700001, so you can't use the previous code anymore. Use RESOURCEINDEX instead.
	This change was needed because too much informations were stored inside the UID, and its last bytes (used to store the resource type) overlapped with some internal flags.
- Added: <RESOURCEINDEX defname> to retrieve the resource index from the defname, ignoring the resource type (Chardef, Spell, Itemdef, Template...) bits.
	As example, <RESOURCEINDEX s_clumsy> returns 1, which is the spell number (id).
- Added: <RESOURCETYPE defname>, which gets the resource type (RES_ITEMDEF, RES_SPAWN, etc) from the defname. The list of the resource type numbers is in the X scriptpack in core/defs.scp.
- Changed: REGIONTYPE block could not accept landtile types with index > 255. Extended this limit to 65534.	This also extends the maximum number of pages in a book by the same amount.

11-01-2019, Nolok
- Fixed: NPC skill training (Issue #176).

13-01-2019, XuN
- [Garbage Collect]: Added error code 0x4226 for old spawn memories in NPCs being converted (and removed in the proccess) to the new system. This error should happen once in the first load and never more (if there's a worldsave after).
- Fixed memories with memory_spawnitem not updating the spawn when loading saves from old builds.
- Fixed Asserts on spawn items when retrieving more1/spawnid being it an invalid resource id.

20-01-2019, Nolok
- Fixed: Teleport spell (and .tele) didn't trigger position-related triggers (like @Enter on regions or @Step on items).
- Fixed: Multis were added to the radarmap when the distance from its center and the player was < 31, now the check is done against the position of the farthest corner/side the player is facing.
	This fixes big multis (like	keeps) appearing on the radarmap only when the player was very close.
	Also, the CanSee checks against multis now use the same mechanic, instead of using the center of the multi.

24-01-2019, Nolok
- Fixed: ARGN1 value from @Hit trigger ignored in @GetHit (Issue #211).
- Fixed: Blood generated after a received hit had the wrong color (Issue #206).
	This changes also the index of the color shown by EFFECT functions, because actually until now it was showing the hue with index = (index - 1).

29-01-2019, Nolok
- Fixed: Deeds with non-multi MORE not being removed after the item is placed (Issue #218).

31-01-2019, Nolok
- Fixed: Attacking something gray caused it to go criminal when it attacks back (Issue #199).
- Changed: Some combat-related memories were not added.
	- MEMORY_IRRITATEDBY: It was added only when the char received a hit or when it was provoked. Now it's added also when someone attacks the char, but has not started or landed the hit yet, and when its pack was snooped.
	- MEMORY_AGGREIVED: It was added only when the char was provoked. Now it's added also when someone starts to attack another char.
- Fixed: Wrong formula used to check if a char did notice someone snooping or stealing.
- Fixed: The "snoop notice" message was shown even when the char didn't actually notice the snooping and the related code wasn't executed.
- Fixed: Noticing someone snooping didn't mark the thief as a criminal.
- Fixed: Trying to attack a char was always noticed as a crime, even if the attack attempt was aborted.
- Changed: The delay between a guard call and the other changed from 1 to 2.5 seconds, to avoid excessive spamming.
- Added: Security check when receiving the new movement request packet (0xF0), to ensure invalid data (or the Krrios' client login packet) isn't considered.

04-02-2019, Nolok
- Fixed: Character pausing the attack when breaking the line of sight for the target (Issues #217 and #196) (thanks shiryux).
- Fixed: When AttackerTimeout elapsed not only the attacker list was emptied, but also the whole combat was aborted.

13-02-2019, Nolok
- Fixed: Skillmenus not showing submenus correctly (Issue #200).
- Fixed: Couldn't make items which didn't have in the SKILLMAKE the typedef for the item needed to craft it.
- Added: Warning message if adding to SKILLMAKE elements which aren't a skill or a typedef.
- Added: Warning message when trying to craft an item with an invalid SKILLMAKE (instead of just aborting the crafting process without any notification).

14-02-2019, Nolok
- Added: .ini Option Flag OF_StatAllowValOverMax (Issue #185): it allows stats value to be set above their maximum value (i.e. allow hits value > maxhits).
	When this OF is on and the stat value is above the maximum value, each time @RegenStat is called the stat value is decreased -1 at a time.
- Fixed: Players not being removed from other client's screen when they logout (Issue #228).
- Fixed: The time of the last access from a player of a sector wasn't correctly set. This also invalidated the checks on SectorSleepDelay.

14-02-2019, Julian
- Fixed: DIALOGCLOSE not removing the dialog from the internal list of dialogs when src is changed through TRYSRC. (Issue #219)
- [Port from Source, 29-06-2016, Coruja] Fixed: Attack/Kill command on pets allowing select the pet itself as target, making it attack his owner. (Issue #57)
- Added: ARGN3 to @MurderMark. If it's set to 1 (or anything but zero), it will skip murder count and criminal flag. (Issue #221)
	This will allow users to script their own kill/murder system. Note that Noto_Update() still will be called after the trigger.

23-02-2019, Nolok
- Fixed: Sometimes a duplicated private UID was assigned to REGIONTYPEs, making Sphere attach to regions wrong REGIONTYPEs (Issue #232). Thanks to Julian, Atilla and the other people on Discord for their intensive testing!
- Fixed: SectorSleep=0 didn't disable sector sleeping.
- Changed: When a char is flagged as criminal by a "viewer" char, now the viewer's MEMORY_SAWCRIME linked to the criminal is removed, if any (Issue #226).
- Added: In @Criminal trigger, RETURN 0 doesn't flag the char as criminal but does remove SRC's MEMORY_SAWCRIME.
	RETURN 1 still blocks the whole trigger behaviour, so it will not flag as criminal and won't remove the MEMORY_SAWCRIME.
- Added: In @Criminal trigger ARGN2 now holds 1 if the char is being marked as criminal because he has an active MEMORY_SAWCRIME linked to the SRC (viewer), otherwise it holds 0.
- Added: .ini Option Flag OF_GuardOutsideGuardedArea (Issue #224) to allow guards to walk in unguarded areas, instead of being teleported back to their home point.

27-02-2019, Nolok
- Fixed: Walking in a sector didn't awake the adjacent ones (Issue #229).
- Fixed: Ini setting ReagentLossFail taking also mana (Issue #234).
- Added: Ini setting ManaLossFail, to make the char lose part of the mana required to cast the spell if the spell casting fails.
- Fixed: Murderer memory timer increasing at each login-logout cycle (Issue #235).
- Fixed: Price property not respected by vendors when selling to them (Issue #238).

06-03-2019, Nolok
- Fixed: Cannot access regiontype properties if the regiontype has attached a typedef (Issue #247).
- Added: .ini Option Flag OF_OWNoDropCarriedItem (When overweighted, don't drop items on ground when moving them (or using BOUNCE) and checking if you can carry them) (Issue #245).

06-03-2019, Julian
- Modified: PILOT function for Ships. Now you can set an UID to pilot the ship, self dclick will remove pilot memory (after triggering @UnMount), also setting same uid twice as pilot will detach pilot from ship.
	You can modify spk_ship_cmds and add this:
		ON=Pilot
		PILOT <SRC.UID>
- [Port from Source, 23-02-2019, Coruja] Added: .ini Option Flag OF_MapBoundarySailing (Issue #147) to make boats move to the other side of the map when reach map boundary.
