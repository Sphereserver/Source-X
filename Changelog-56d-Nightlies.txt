
---- 0.56d --------------------------------------------------------------------
---- 11/04/2016

10-04-2016, Coruja
- Changed: Food level won't decrease on GM chars anymore.
- [sphere_msgs.scp]: Removed messages 'npc_text_murd_*'.
- [sphere_speech.scp]: Moved hardcoded speech commands 'I must consider my sins', 'I resign from my guild' and 'I resign from my town' to scripts.
	IMPORTANT: It's HIGHLY recommended update this script, or these speech commands will stop working.

18-04-2016, XuN
- Removed TAG.OVERRIDE.MAXWEIGHT and added ModMaxWeight on it's place for Banks and Corpses.
- Fixed stackable items not checking maxweight on corpses.
- Removed all references to MEMORY_WAR_TARG since they are not needed anymore, targets are handled by 'Attacker' now.
- Added back old HitChance formula under CombatDamageEra = 0
- Updated checks on @NotoSend trigger: it will not check anymore if ARGN1 > NOTO_INVUL, so you can create custom notoriety.

19-04-2016, Coruja
- Fixed: Protection spell not working correctly if COMBAT_ELEMENTAL_ENGINE combat flag is disabled.

14-05-2016, XuN
- Fixed: Pets not gaining Karma (it can be blocked through @KarmaChange trigger, no reason to stop it from the source).
- Fixed: Killing pets and/or bonded pets not giving karma (same reason as above).
- Fixed: Hits being canceled when going out of range and COMBAT_STAYINRANGE was enabled, it should happen when it is disabled.
- Fixed: Attack delay broken when COMBAT_PREHIT is disabled because of using as SetTimeOut animDelay instead of iSwingDelay.
- Fixed: Weird crash related to a change on CChar:OnTick()
	(Not really fixed, just reverted the code because I couldn't track what is exactly causing it and seems to happen when there are ~100 clients
	 online, so I'm not going to mess a lot with it, it's not cool to use 100 players to do tests :) ).
- Attempt to log and stop a crash related to the NetworkOutput.
- Fixed: NPC_FightMagery not correctly checking if the NPC can use magic skills and creating some infinite loops under certain circumstances.

15-05-2016, XuN
- Updated Fight_IsActive function with NPC's skills and one Attacker's check.
- Fixed: NPCs not ending combat when their target is far away from them and calling Attacker_Delete() @CombatDelete with argn=2 (Distance) to give control over it.
- Fixed: GUARD ME making pet following you instead of guarding you (Thanks Shamino).
- Fixed: NPCs being dumb before they reach their target.
- Updated a bit CChar::OnTick.

17-05-2016, Nolok
- Fixed: speech color for NPCs on Enhanced Clients being always "yellow". Achieved this by forcing (only for EC) system (0) talkmode instead of say (3).
	This workaround works only if the speech packet sent by Sphere is Unicode (instead of ASCII), so you'll need to set SAY_DEF_UNICODE in sphere_msgs.scp to 1.
- Added: SpeechColorOverride property (players only, R/W) to override client speech hue. This will not affect Words of Power hue, you can use spell triggers for this
	(WOP hue on Enhanced Client will still be set by the client, regardless of the hue sent by the server).
	SpeechColorOverride = 52 (or 0x34), which is the default yellow hue for player speech, disables the override.
	Remember: SpeechColor property is read-only for players and R/W for NPCs. For players, it contains the last speech hue sent by the client. For NPCs, its value
		will be used to set their speech hue.
- Fixed: SpeechColor not overriding the speech hue for NPCs. SpeechColor = 946 (or 0x382), which is the default gray hue for NPC speech, disables the override.
- Changed: If a hue is not specified, SAY and MSG will use SpeechColor or, if set, SpeechColorOverride.

- TODO: add default npc and player speech color as a def to sphere_defs.scp

19-05-2016, Nolok
- Fixed: wrong parsing when an unicode prompt response packet is received.

29-05-2016, Kaylala (Khaos)
Gump Enums, New Container Defines, Misc Switches from Prop Attributes to Flags, Added AlterItem Prop.

- Added: uofiles_enums.h - New Gump Enums for several new containers, cards, and other miscellaneous assets.
- Added: CContainer.cpp - definitions for the new Container Gump assets.
- Updated: Tables - Removed Only<Race/Sex> as these are unused. 
	Split the NoDropTrade back into separate flags as they also have separated CliLocs. 
	Moved over Balanced, BattleLust, and BloodDrinker as they are now being checked as Item Attributes.
	These all are now stored on Items only.
	cItemBase_props.tbl had AlterItem added to it.
- Updated: Several old Props that are checked in Can's and Attr.
	These got a minor update switching the checks to force any 1 set in individual props to just work with those Can's and Attr's.
- Added: New Attr list from base pack reflecting EA attributes and changes from some props to a more appropriate Attr setting where no values are truly needed.
	This should save on some memory consumption.
Note: More needs to be switched over and I am trying to get this and the Base Packs completely up to date and somewhat synchronized with the most efficient methods Xun and I can think of.

30-05-2016, XuN
- Fixed CanUse not inheriting from the higher item (ie: i_boomerang_blah not inheriting CanUse from i_boomerang).
- Fixed Statf_War not clearing in every situation when calling Attacker_Clear().
- Added RecipeAlchemy,RecipleBlacksmith, RecipeBowcraft, RecipeCarpentry, RecipeCartography, RecipeCooking, RecipeInscription,
	RecipeTailoring, RecipeTinkering (all of the current SKF_CRAFT skills).
- Changed back Region Flags to dword, they do not need to store higher values yet.
- Added PayGold() method to control payment values with it's own trigger:
  ON=@PayGold:
	Argn1 = Gold to pay.
	Argn2 = Payment type ( 0 = Train, 1 = Buy , 2 = Hire).
	src = The NPC receiving the money.
	argo(if any) = The stack of gold used to pay (ie: training)

- OWNER is now RW, it can be used to set NPC's owner directly without the need of custom functions.
- Added NEWSUMMON, working as NEWNPC and NEWITEM, eg:
	serv.newsummon=c_ogre,15
	new.p=<p>	// Will summon an ogre for 15 seconds on your position, not giving
  the second param will result in default timer according to your magery skill.

29-05-2016, Kaylala (Khaos)
- Updated: Tables - Removed Balanced, BloodDrinker, and BattleLust from BaseBaseDef tables 
  and CObjBase tables since they were moved. Moved Bane and SplinteringWeapon to CItem tables.
- Added: Attr_SplinteringWeapon to CItem.h.
- Added: SplinteringWeapon, Balanced, and Bane to Item Properties and removed them from Obj
  handling. All now use ATTR_*.
- Added: Missing recipes: RecipeMasonry and RecipeGlassblowing. They might not have their
  craft skills, but they have recipes and synergy with Carpentry and Alchemy. Separated as
  they would on EA for others using a custom system.

30-07-2016, Nolok
- Updated the README.md file with fundamental informations about this fork.
- Fixed: REGIONTYPE block could not accept landtile types with index > 163. Extended this limit to 255.
	This also extends the maximum number of pages in a book.
- Fixed: Sphere crashing sometimes just before saying Defmessages: npc_generic_gone_1 and npc_generic_gone_2.
- Changed: The redefinition of a resource will always be notified, even without DEBUGF_SCRIPTS enabled in Sphere.ini.

 30-12-2016, Nolok
 - Fixed EFFECT duration (bLoop variable) on Enhanced Client. Given the same bLoop or the same packet, Enhanced Client shows the effect for a much shorter amount of time
	than Classic Client. To be the EFFECT statements more portable between the two clients, if the client is the EC then bLoop is multiplied by 3.

10-05-2017, Nolok
- Fixed: Resources page not being stored correctly. This solves a bug with books and REGIONTYPEs.
- Fixed: <ACTION> returned the skill defname but its value could only be set via the skill key
	(example: <ACTION> returns skill_hiding, but ACTION=skill_hiding didn't activate the skill, you need to use ACTION=hiding).
	Solved this dicrepancy making ACTION return the skill key. Compatibility with older scripts is
	not broken, since the skill key or defname can be compared regardless to both another key or defname.
	-> This fixes also ACTION being stored in saves (via skill defname) but not set at the server startup.
- Changed: ACT and ACTP are now stored in the save files, in order not to break actions performed during the save process
	at the server restart.
- Fixed: TAG.MATOVERRIDE containing wrong or no defname.
- Fixed: Server crashed when calling some functions with invalid argument (IsDigit, IsSpace, IsAlpha, IsAlnum).
- Changed: Added/removed some debug and warning messages; updated some other messages and enabled them also in non-debug builds.
	-> Consider now the debug build as usable (it's pretty useful for finding bugs in the source or in the scripts).
- Changed: Increased the text capacity of the console on Windows.

12-05-2017, Nolok
- Fixed: PARTY.CREATE wasn't working properly.

13-05-2017, Nolok
- Added: Now BOUNCE calls triggers @DropOn_Self and @ItemDropOn_Self on the char's backpack.
	If a RETURN 1 is performed and a new CONT has not been set via scripts on the trigger call, the item is dropped on ground,
	otherwise the item is left in the new CONT.
- Fixed: Item drop sound not being played if BOUNCE dropped item on ground.

16-05-2017, Nolok
- Added: Now FACE can also accept the coordinates of the point towards which the char should look.
- Added: Now ACTP behaves like every other point (so you can also extract x, y, z, statics, etc).
- Fixed: RESMAKE returning val and key without a space character to separate them (e.g.: 2Logs).

20-05-2017, Nolok
- Added: Print the stack trace when an ASSERT fails, in order to ease the debug process.
- Changed: Better formatting of the stack trace.

22-05-2017, Nolok
- Fixed: Garbage Collection deleting (and reporting) only a fraction of the unplaced objects. Fixed also incorrect formatting of the "invalid code".
- Added: Now the Garbage Collection report prints the script file name and the line where the object was created.
	This only works for objects added in the scripts through the keywords: NEWITEM, NEWNPC, NEWSUMMON, NEWDUPE, DUPE (and ITEM/ITEMNEWBIE since 24/09/2017).

04-07-2017, Nolok
- Fixed: random ranges ( e.g.: {i_dagger 1 i_gold 1} ) sometimes returned a totally random and unexpected value.
	If the value was used to create an item, it could either create a random item or not create it at all, without logging any error.
- Fixed: vendors couldn't re-sell the items bought from the players.
- Fixed: with the current User Interface (the blue one, not the orange which is older) of the Enhanced Client, in the buy gump
	the paperdoll of the vendor often was missing on the left.

	IMPORTANT: with the same UI of the EC the buy gump may not work, because it doesn't show the items in stock.
		This occurs with the new UI (blue) and not with the old (orange) because the new one wants the vendor to have
		its name inclusive of the title. If the "the" keyword and the following title aren't found, the code of the interface
		generates an internal error and halts the execution of the remaining code (which renders the items in the list).
		As example: if the vendor name is Greg the items don't show, but if you set the NAME (and not the TITLE property)
		to Greg the Butcher ("the" word is mandatory) the items are finally shown.
		Since the client retrieves the name with the tooltip data (Cliloc 1042971) the server sends, if you want a workaround
		to this requirement, you can leave untouched the NAME property and send a custom name cliloc which contains also the work/trade title:
			ADDCLILOC 1042971, <NAME> The <QVAL <ISEMPTY <TITLE>> ? Vendor : <TITLE>>

- Fixed: Tracking skill could not track brain_berserk npcs.
- Changed: updated error and warning messages related to resources redefinition.

04-09-2017, Nolok
- Added: the ID of an item can be overridden after its creation by a random template (which must return a non-container type item).
	Remember though that this is inefficient and that the preferred way is to use a { } random range.

20-09-2017, Nolok
- Fixed: very old bug which caused arguments of scripts instructions being silently parsed in the wrong way (if they
	contained a {} range) and generating unwanted behaviour. Example: parsing "SOUND {2 3}, 1" resulted in reading 3 arguments
	"{2", "3}", "1", instead of 2 "{2 3}" and "1".
- Changed: removed the '-' symbol as a range argument separator.
- Updated: now, when parsing weighted ranges, only the randomly extracted argument will be completely parsed and resolved,
	instead of parsing recursively each argument of the range. Maybe, this can reduce the cpu usage on big servers by a little.

21-09-2017, Nolok
- Fixed: getting the name from a name pool sometimes failed.

22-09-2017, Nolok
- Fixed: since adding an item to an NPC triggers @(Item)EquipTest trigger, doing RETURN 1 in @EquipTest or @ItemEquipTest resulted in the object created
	but not placed in the world. Now, if the character is an NPC, the item is automatically bounced into the pack even if doing RETURN 1.
- Changed: @EquipTest and @ItemEquipTest triggers are now called only when trying to equip equippable items. Before, they were called also when dropping or
	creating an item to be equipped or bounced to the pack of a NPC.

24-09-2017, Nolok
- Fixed: TDATA3 and TDATA4 for t_container were not working.
	TDATA3 stores the minimum X of an object placed inside a container as the first 16 bits, while the last 16 bits store the minimum Y.
	TDATA4 stores the maximum X and maximum Y in the same way. Example:
	TDATA3=((45 << 16) | 65)	// MinXY = ((X << 16) | Y)
	TDATA4=((100 << 16) | 100)	// MaxXY
- Added: the Garbage Collection report prints the script file name and the line where the object was created also for items created with ITEM or ITEMNEWBIE keywords.
- Fixed: Linux console not showing colored text.
- Fixed: Linux version crashing during the shutdown cleanups.

29-09-2017, Nolok
- Fixed: ACTARG1/2/3 values being zeroed or corrupted after the execution of any skill trigger.
	Now they are zeroed before the @PreStart trigger (so after @Select) and	when we are done with the skill (success, abort, failure).
	! As of r2567 (of 05-10-2017) this cleanup isn't done anymore before the @PreStart trigger but only at the end of the skill!
	Also ACTDIFF is now set and cleared in the same situations of ACTARGs.
- Fixed: FORCONT, FORCONTID, FORCONTTYPE second argument (the maximum number of subcontainers to be searched in) could only be a plain number, not an expression.
- Fixed: for crafting skills, crafting difficulty didn't increase with the required skill value.
- Added: for skills Enticement, Peacemaking and Provocation, if ACTARG1 is set to the UID of the instrument to play, it will be played the sound of that instrument.
- Added: TAG.BARDING.DIFF is now used to determine the difficulty of Enticement, Peacemaking and Provocation skills. If this tag isn't set, the old behaviour is used.

10-10-2017, Nolok
- Fixed: object created but not placed in the world when trying to make a player equip non-equippable items; now they are bounced to the pack.
	This fixes also the items in the NEWBIE section not being added (sometimes, and for some kind of items) at the character creation.
- Fixed: bug occurring when doing REMOVE and RETURN 1 in @(Item)EquipTest trigger fired on an NPC.
- Changed: ACTARG1/2/3 values are now cleared only when we are done with the skill (success, abort, failure).

21-10-2017, Nolok
- Fixed: if the client's LIGHT property was set, the Night Sight flag was ignored when calculating the light level to send to the client.
- Fixed: the client didn't get the new light level nor when the sector's LIGHT property was overridden, neither when the client's LIGHT property was changed.
- Added: warning message if AllowLightOverride ini flag is set to 0 but we are trying to manually set the sector's LIGHT property.

22-10-2017, Nolok
- Fixed: when using the meditation skill, if the SKF_NOSFX flag was set, the bufficon wasn't added.
- Fixed: ACTARG1/2/3 weren't zeroed at skill success, abort or failure if the SKF_SCRIPTED was set.
- [Port from Source, 13-02-2017, Coruja] Changed: Spellbooks now store spell offset / max spells using TDATA3/TDATA4 instead MOREZ/MOREX.
- [Port from Source, 21-04-2017, Coruja] Changed: Mount memories now can have their own i_mt_* ITEMDEFs instead use DEFNAME=i_mt_* directly on base items (usually 'boat parts').

23-10-2017, Drk84
- [Port from Source, 14-02-2017, Coruja] Fixed: Combat Hit Chance formulas incorrectly assuming that defender is always using the same combat skill as the attacker.
  
24-10-2017, Drk84 
- [Port from Source, 19-09-2017, Coruja] Fixed: Client 'Open Spellbook' macro making the client crash if it tries to open the requested spellbook gump when the spellbook item is not loaded yet.

24-10-2017, Nolok
- Fixed: using ADDCIRCLE without the second argument caused sphere to crash. Also, its use on non t_spellbook items was incorrectly allowed.
- Fixed: MODMAXWEIGHT of a new player or item was a random number instead of zero.
- Fixed: corpse MORE2 held an invalid UID instead of the killer's.
- [Port from Source, 15-10-2017, Coruja]
	Fixed: MODMAXWEIGHT property not working correctly.
	Changed: Updated 'weight' tooltip on containers.

24-10-2017, Drk84
- [Port from Source, 27-09-2016, Coruja] Fixed: Worldsave not saving DAM/ARMOR properties set manually on chars/items already placed on world.

28-10-2017, Drk84
- [Port from Source, 08-05-2016, Coruja] Fixed: Explosion potions not working correctly.
- [Port from Source, 07-02-2017, Coruja] Fixed: Hidden/Invisible chars not getting revealed when being stumbled.

29-10-2017, Nolok
- Added: now the logout console message shows also the character's name.

30-10-2017, Drk84
- [Port from Source, 17-10-2016, Coruja] Fixed: NPCs losing 'statf_spawned' flag after server restart.
- [Port from Source, 30-01-2017, Coruja] Fixed: ML/SA/HS/TOL doors not working correctly.

01-11-2017, Drk84
- [Port from Source, 12-01-2017, Coruja] Fixed: Char death counting kill/fame/karma gain for killers that started the attack but don't have caused any damage yet.

05-11-2017, Drk84
- Added SkillAdjusted commmand, returns the skill value adjusted by the stat bonus.
  The stat bonus are BONUS_STR, BONUS_DEX, BONUS_INT and BONUS_STATS and they can be found in sphere_skills.scp
  Normally you can see the skill values adjusted by the stats bonues by checking the value of the skill in the Skill Menu when the "Show Real" option is turned OFF,
  The adjusted skill value is used by Sphere for calculating the chance of success for NON-combat skills (and also ResistingSpells), in the scripts there was no
 "short-way" to display the correct chance of success unless using a lot of multiplication and division. 
  Usage:   SkillAdjusted.skillnumber or SkillAdjusted.skillkey (Example: SkillAdjusted.1 or SkillAdjusted.Anatomy)
  Example calculating chance of success by scripts:
  ON=@SkillStart
	local.skillFlag =<serv.skill.<argn1>.flags>
	if !(<local.skillFlag>&SKF_FIGHT)
		if <actdiff> >= <skilladjusted.<argn1>>
			sysmessage @50 <serv.skill.<argn1>.name>: <fval randbell(<eval (<skilladjusted.<argn1>>) - <actdiff>>,100)>%
		else
			sysmessage @50  <serv.skill.<argn1>.name>: <fval 1000 -  randbell(<eval (<skilladjusted.<argn1>>) - <actdiff>>,100)>%
		endif
	endif

06-11-2017, Nolok
- Changed: renamed CLIENTISSA command to CLIENTISENHANCED.
- Fixed: BADSPAWNS not working.
- Fixed: using SKILLCHECK, SEX, ANIM, MAKEITEM without proper arguments could not work or even crash the server.

07-11-2017, Nolok
- Fixed: beard not added at the character creation with the 2D client.
- Fixed: character creation on the Enhanced Client didn't add the face or the gargoyle horns.

08-11-2017, Drk84
- Fixed: wrong sound played when a human male character get hit.
- Fixed: monsters and animal sometimes executing the wrong animation when attacking.

09-11-2017, Nolok
- Fixed: RAND(x) not returning a value between 0 and x - 1 (instead it returned a value between 0 and x).

09-11-2017, Drk84
- [Port from Source, 12-03-2017, Coruja] Added: Basic internal packet filters that will make Sphere avoid crash or consume excessive resources when under DDoS attack.

10-11-2017, Nolok
- Updated NPC ally groups. Before this commit, they included the creatures up only to the LBR expansion. This affects the NPC hostility
	calculations and the Provocation skill.
- Added: override for an hardcoded behaviour of Provocation. If the provoked character is in the same ally group of the targeted character, at the skill @Success
	the skill execution was (and still is) aborted. Now on skill @Start trigger ACTARG3 is set to 1 if the characters are in the same ally group, otherwise it's 0.
	Then, if you want to always allow the Provocation, put ACTARG3=0 in @Start or @Success.
- [sphere_msgs.scp] Added: PROVOCATION_KIND defmessage to be shown if the Provocation skill is aborted due to provoked and target characters being in the same ally group.

12-11-2017, Nolok
- Fixed: nested random ranges not being parsed correctly.
- Fixed: random ranges ignoring the last element-weight couple.
- Changed: ADD command does not show anymore the console error if the argument is invalid. The sysmessage is still displayed.

05-12-2017, Drk84
- [Port from Source, 05-09-2016, Coruja]  Fixed: TimerCall setting on sphere.ini using wrong time format (hours instead minutes) to call f_onserver_timer function

13-12-2017, Drk84
- Possible fix for stat cap issue when the sum of the players stats are at StatCap -1. 

23-12-2017, Nolok
- Added: trigger @NPCActWander. It is called each step an NPC does while wandering. ARGN1 = 0 if it will continue to wander, 1 if randomly deciding to stop, 2 if deciding to stop because
	after looking around it found something interesting; ARGN2 = 1 if it's returning to home, 0 otherwise.
	RETURN 1 stops decisions for this step, so it will not return to home, do another step or stop wandering (again, for this step).
- Fixed: actions or events requiring an NPC to play its default sound played only sound 0 or 1. Now the SOUND property of the CHARDEF is used, if not set SOUND 1 or 2 will be played.
	Examples of these events are: BARK without arguments, NPC "looking around", hearing a command, shrinking/unshrinking.
- Updated: NPCs when wandering around now do "look around", doing in fact some AI checks.
	This also makes the trigger @NpcLookAtChar fire more times than before.
- Updated: if DEBUGF_ADVANCE_STATS is enabled in the .ini, the gain chance will be shown also on non-debug builds.

29-12-2017, Nolok
- Fixed: wrong sound played when using BARK, shrinking/unshrinking a pet, pet receiving a speech command.
- Fixed: playable characters (men, elves and gargoyles) NPCs should not make random noises when wandering around.
- Added: debug message when trying to retrieve the SOUND property from an NPC whose property wasn't set.

29-12-2017, Drk84
- Fix for the spellchanneling item property.

03-01-2018, Drk84
- Added missing parenthesis to MulDivLL and MulDiv.

03-01-2017, Nolok
- Fixed: when playing a sound from a character from Samurai Empire and later expansions, it was chosen the wrong sound ID for the given action. This is caused by the different
	order of IDs in the sound file after that expansion. Also, updated the script pack (sphere_defs.scp and sphere_monsters.scp) with a lot of new and corrected old sounds.
	Still, some sounds are missing.
- Fixed: some rare combat-related crashes.
- Added: SOUNDACT_RAND, SOUNDACT_IDLE, SOUNDACT_NOTICE, SOUNDACT_HIT, SOUNDACT_GETHIT, SOUNDACT_DIE defs to the scripts. They are meant to be used with BARK,
	which has always accepted as parameter the sound type (even if the wiki at this day doesn't say so), not the sound ID (use SOUND for this).
- Updated: now when an NPC is looking around it can play different sounds depending on its AI choices. Also prevented human-sounding chars to play such noises.

05-01-2018, Nolok
- Added: SOUNDIDLE, SOUNDNOTICE, SOUNDHIT, SOUNDGETHIT, SOUNDDIE CharDef properties. When a creature emits a sound linked to an action, the sound ID of	the corresponding override,
	if set, will be used instead of obtaining it from the SOUND property. Set one of these overrides to -1 if you don't want that action-related sound to be played.

14-01-2018, Drk84
- Fixed: The effect value of spells that equips a "memory item" on a character(Bless, Curse and so on) was calculated twice, also causing to ignore the 
	value of local.effect.
	
25-01-2018, Nolok & Drk84
- Changed the way ACTARG1/ACTARG2/ACTARG3 are saved, they will be saved only if their value is different from 0 and the character's action is a valid skill or is one 
	of the action that uses ACTARG1/ACTARG2/ACTARG3 (NPCACT_FLEE, NPCACT_TALK, NPCACT_TALKFOLLOW, NPCACT_RIDDEN).
- Reverted the following changes made in a precedent commit for avoiding conflict with Spellcasting or custom scripts.
	Removed the call to Skill_CleanUp method inside the trigger checks in Skill_UseQuick.
	Removed the reset of ACTARG1/ACTARG2/ACTARG3 inside the Skill_CleanUp method.

27-01-2018, Nolok & Drk84
- Fixed: crash occurring when an NPC cleaned its attackers.
- Fixed: magic-capable NPCs often did not attack or cast spells when they should instead start to attack.

29-01-2018, Nolok
- Added: ini setting MaxLoopTimes is now controlling also the TIMERF executions. If too many TIMERFs are executed in the current tick, the loop will be aborted and a warning will be issued.
	If it value is 0, there will be no limit (still it is suggested to set a value, even very high, because have just a distraction when writing some kind of scripts and you can cause a deadlock).

31-01-2018, Drk84
- Commented 4 lines of in code in method Skill_Fight() (CCharSkill.cpp), these 4 lines refers to a fix for an exploit in combat
  Because the lines above cause problems with combat swings and we don't know what the exploit is they were commented and replaced with Set_Timeout(0).
