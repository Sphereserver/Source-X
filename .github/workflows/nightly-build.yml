name: Nightly build

on: [push, pull_request]

jobs:
  windows-64:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: CMake 
      run: cmake -G "Visual Studio 17 2022" src/
    - name: MSBuild
      run: msbuild SphereServer.sln /verbosity:minimal /maxcpucount /p:Configuration=Nightly
    - name: Create folders
      run: mkdir accounts, logs, save, scripts
    - name: Zip files
      run: 7z a SphereSvrX-win64-nightly.zip accounts\ logs\ save\ scripts\ "bin64\Nightly\SphereSvrX64_nightly.exe" "src\sphere.ini" "src\sphereCrypt.ini" "dlls\64\libmysql.dll"
    - name: Create Nightly
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: Nightly
          tag_name: Nightly
          files: SphereSvrX-win64-nightly.zip

  windows-32:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: CMake 
      run: cmake -G "Visual Studio 17 2022" -A Win32 src/
    - name: MSBuild
      run: msbuild SphereServer.sln /verbosity:minimal /maxcpucount /p:Configuration=Nightly
    - name: Create folders
      run: mkdir accounts, logs, save, scripts
    - name: Zip files
      run: 7z a SphereSvrX-win32-nightly.zip accounts\ logs\ save\ scripts\ "bin\Nightly\SphereSvrX32_nightly.exe" "src\sphere.ini" "src\sphereCrypt.ini" "dlls\32\libmysql.dll"
    - name: Create Nightly
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: Nightly
          tag_name: Nightly
          files: SphereSvrX-win32-nightly.zip

  linux-64:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: CMake
      run: cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Nightly" -DCMAKE_TOOLCHAIN_FILE=src/cmake/toolchains/Linux-GNU-x86_64.cmake src/
    - name: Make
      run: make -j4
    - name: Create folder
      run: mkdir accounts logs save scripts
    - name: Zip files
      run: tar -czf SphereSvrX-linux64-nightly.tar.gz accounts/ logs/ save/ scripts/ "bin64/SphereSvrX64_nightly" -C src/ sphere.ini sphereCrypt.ini
    - name: Create Nightly
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: Nightly
          tag_name: Nightly
          files: SphereSvrX-linux64-nightly.tar.gz

  linux-32:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Update
      run: sudo apt install -yqq --no-install-recommends gcc-7 gcc-7-multilib g++-7 g++-7-multilib > /dev/null
    - name: Export CC
      run: export CC="gcc-7" && export CXX="g++-7
    - name: CMake
      run: cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Nightly" -DCMAKE_TOOLCHAIN_FILE=src/cmake/toolchains/Linux-GNU-x86.cmake src/
    - name: Make
      run: make -j4
    - name: Create folder
      run: mkdir accounts logs save scripts
    - name: Zip files
      run: tar -czf SphereSvrX-linux32-nightly.tar.gz accounts/ logs/ save/ scripts/ "bin/SphereSvrX32_nightly" -C src/ sphere.ini sphereCrypt.ini
    - name: Create Nightly
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: Nightly
          tag_name: Nightly
          files: SphereSvrX-linux32-nightly.tar.gz