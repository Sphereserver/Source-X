name: Linux x86_64

on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'dev'
  pull_request:
    branches:
      - 'master'
      - 'main'
      - 'dev'

jobs:
  linux-x86_64:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install prerequisites
      run:  |
            lsb_release -d

            sudo add-apt-repository universe && sudo sudo apt-get -qq update
            sudo apt install -yq --no-install-recommends ninja-build gcc-12 g++-12 > /dev/null
            sudo apt install -yq --no-install-recommends mariadb-client libmariadb-dev
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 90 --slave /usr/bin/g++ g++ /usr/bin/g++-12
    - name: Report building tools
      run:  |
            echo "GCC:" && gcc -v
            echo && echo "CMake:" && cmake --version
            echo && echo "Ninja:" && ninja --version

    - name: CMake
      run: |
            mkdir -p build
            cmake -G "Ninja" -DCMAKE_BUILD_TYPE="Nightly" -DCMAKE_TOOLCHAIN_FILE=cmake/toolchains/Linux-GNU-x86_64.cmake -S ./ -B ./build
    - name: Ninja
      run: cd build && ninja && cd ..
    - name: Create package
      run:  |
            mkdir accounts logs save scripts
            tar -czf SphereSvrX-linux-x86_64-nightly.tar.gz accounts/ logs/ save/ scripts/ build/bin-x86_64/SphereSvrX64_nightly src/sphere.ini src/sphereCrypt.ini

    # Upload artifact linked to the workflow run - only if the run is for a pull request, or for selected branches
    - name: Upload artifact
      if: contains(fromJson('["master", "main", "dev"]'), github.ref_name) || ${{ github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@v4
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Build-linux-x86_64
        path: SphereSvrX-linux-x86_64-nightly.tar.gz
        overwrite: true


  upload_github_release:
    needs: linux-x86_64
    # Upload artifact linked to GitHub RELEASE we are creating - only if the run is for a pull request, or for selected branches
    if: contains(fromJson('["master", "main"]'), github.ref_name)

    runs-on: ubuntu-latest
    steps:
      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          name: Build-linux-x86_64
          merge-multiple: true
          run-id: ${{ github.run_id }}
      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Nightly
          tag_name: Nightly
          prerelease: true
          files: SphereSvrX-linux-x86_64-nightly.tar.gz

  upload_selfhost_release:
    needs: linux-x86_64
    if: contains(fromJson('["master", "main"]'), github.ref_name) && (github.repository == 'SphereServer/Source-X')

    runs-on: ubuntu-latest
    steps:
      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          name: Build-linux-x86_64
          merge-multiple: true
          run-id: ${{ github.run_id }}
      - name: Push release
        run: |
          curl -sST "{SphereSvrX-linux-x86_64-nightly.tar.gz}" -u ${{secrets.UP_USER}}:${{secrets.UP_PASS}} ${{secrets.UP_WHERE}}
