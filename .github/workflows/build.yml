name: Build

on:
  - push

jobs:
  windows-64:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: CMake 
      run: cmake -G "Visual Studio 17 2022" src/
    - name: MSBuild
      run: msbuild SphereServer.sln /verbosity:minimal /maxcpucount /p:Configuration=Nightly

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ github.sha }}
        path: bin64\Nightly\SphereSvrX64_nightly.exe

    # only if the branch is main
    - name: Create folders
      if: ${{ github.ref_name == 'main' }}
      run: |
            mkdir accounts, logs, save, scripts
            7z a SphereSvrX-win64-nightly.zip accounts\ logs\ save\ scripts\ .\bin64\Nightly\SphereSvrX64_nightly.exe .\src\sphere.ini .\src\sphereCrypt.ini .\dlls\64\libmysql.dll
    - name: Create pull request tag and upload files
      if: ${{ github.ref_name == 'main' }}
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: Nightly
          tag_name: Nightly
          files: SphereSvrX-win64-nightly.zip
      

  windows-32:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: CMake 
      run: cmake -G "Visual Studio 17 2022" -A Win32 src/
    - name: MSBuild
      run: msbuild SphereServer.sln /verbosity:minimal /maxcpucount /p:Configuration=Nightly
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ github.sha }}
        path: bin\Nightly\SphereSvrX32_nightly.exe

    # only if the branch is main
    - name: Create folders
      if: ${{ github.ref_name == 'main' }}
      run:  |
            mkdir accounts, logs, save, scripts
            7z a SphereSvrX-win32-nightly.zip accounts\ logs\ save\ scripts\ .\bin\Nightly\SphereSvrX32_nightly.exe .\src\sphere.ini .\src\sphereCrypt.ini .\dlls\32\libmysql.dll
    - name: Create pull request tag and upload files
      if: ${{ github.ref_name == 'main' }}
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: Nightly
          tag_name: Nightly
          files: SphereSvrX-win32-nightly.zip

  linux-64:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install prerequisites
      run:  |
            lsb_release -d
            gcc --version
            cmake --version
    - name: CMake
      run: cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Nightly" -DCMAKE_TOOLCHAIN_FILE=src/cmake/toolchains/Linux-GNU-x86_64.cmake src/
    - name: Make
      run: make -j4
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ github.sha }}
        path: bin64/SphereSvrX64_nightly

    # only if the branch is main
    - name: Create folder
      if: ${{ github.ref_name == 'main' }}
      run:  |
            mkdir accounts logs save scripts
            tar -czf SphereSvrX-linux64-nightly.tar.gz accounts/ logs/ save/ scripts/ -C bin64/ SphereSvrX64_nightly -C ../src/ sphere.ini sphereCrypt.ini
    - name: Create pull request tag and upload files
      if: ${{ github.ref_name == 'main' }}
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: Nightly
          tag_name: Nightly
          files: SphereSvrX-linux64-nightly.tar.gz


  linux-32:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install prerequisites
      run:  |
            lsb_release -d
            sudo sudo dpkg --add-architecture i386 && sudo apt-get -qq update && sudo apt install -yqq --no-install-recommends gcc-multilib g++-multilib default-libmysqlclient-dev:i386 libmysqlclient-dev:i386
            gcc --version
            cmake --version
    - name: CMake
      run: cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Nightly" -DCMAKE_TOOLCHAIN_FILE=src/cmake/toolchains/Linux-GNU-x86.cmake src/
    - name: Make
      run: make -j4
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ github.sha }}
        path: bin/SphereSvrX32_nightly
    
    # only if the branch is main
    - name: Zip files to upload
      if: ${{ github.ref_name == 'main' }}
      run:  |
            mkdir accounts logs save scripts
            tar -czf SphereSvrX-linux32-nightly.tar.gz accounts/ logs/ save/ scripts/ -C bin/ SphereSvrX32_nightly -C ../src/ sphere.ini sphereCrypt.ini
    - name: Create pull request tag and upload files
      if: ${{ github.ref_name == 'main' }}
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: Nightly
          tag_name: Nightly
          files: SphereSvrX-linux32-nightly.tar.gz