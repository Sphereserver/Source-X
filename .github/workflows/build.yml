name: Build

on:
  - push
  - pull_request

jobs:
  windows-x86_64:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: CMake 
      run: cmake -G "Visual Studio 17 2022" .\
    - name: MSBuild
      run: msbuild SphereServer.sln /verbosity:minimal /maxcpucount /p:Configuration=Nightly
    - name: Create package
      run: |
            mkdir accounts, logs, save, scripts
            7z a SphereSvrX-win64-nightly.zip accounts\ logs\ save\ scripts\ .\bin64\Nightly\SphereSvrX64_nightly.exe .\src\sphere.ini .\src\sphereCrypt.ini .\lib\bin\x86_64\mariadb\libmariadb.dll

    # only upload artifact in pull request or if is main/master branch
    - name: Upload artifact
      if: contains(fromJson('["master", "main"]'), github.ref_name) || ${{ github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@v3
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Builds
        path: SphereSvrX-win64-nightly.zip


  windows-x86:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: CMake 
      run: cmake -G "Visual Studio 17 2022" -A Win32 .\
    - name: MSBuild
      run: msbuild SphereServer.sln /verbosity:minimal /maxcpucount /p:Configuration=Nightly
    - name: Create package
      run:  |
            mkdir accounts, logs, save, scripts
            7z a SphereSvrX-win32-nightly.zip accounts\ logs\ save\ scripts\ .\bin\Nightly\SphereSvrX32_nightly.exe .\src\sphere.ini .\src\sphereCrypt.ini .\lib\bin\x86\mariadb\libmariadb.dll

    # only upload artifact in pull request or if is main/master branch
    - name: Upload artifact
      if: contains(fromJson('["master", "main"]'), github.ref_name) || ${{ github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@v3
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Builds
        path: SphereSvrX-win32-nightly.zip


  linux-x86_64:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install prerequisites
      run:  |
            lsb_release -d
            sudo add-apt-repository universe && sudo sudo apt-get -qq update
            sudo apt install -yq --no-install-recommends gcc-12 g++-12 > /dev/null
            sudo apt install -yq --no-install-recommends mariadb-client libmariadb-dev
            export CC="gcc-12" && export CXX="g++-12"
            gcc -v && cmake --version && ninja --version
    - name: CMake
      run: |
            mkdir -p build
            cd build
            cmake -G "Ninja" -DCMAKE_BUILD_TYPE="Nightly" -DCMAKE_TOOLCHAIN_FILE=src/cmake/toolchains/Linux-GNU-x86_64.cmake -S ../ -B .
    - name: Ninja
      run: ninja
    - name: Create package
      run:  |
            mkdir accounts logs save scripts
            tar -czf SphereSvrX-linux64-nightly.tar.gz accounts/ logs/ save/ scripts/ -C bin64/ SphereSvrX64_nightly -C ../src/ sphere.ini sphereCrypt.ini

    # only upload artifact in pull request or if is main/master branch
    - name: Upload artifact
      if: contains(fromJson('["master", "main"]'), github.ref_name) || ${{ github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@v3
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Builds
        path: SphereSvrX-linux64-nightly.tar.gz

  linux-x86:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install prerequisites
      run:  |
            lsb_release -d
            echo && echo "** Setting up compiler" && echo
            sudo sudo dpkg --add-architecture i386
            sudo add-apt-repository universe && sudo apt-get -qq update
            sudo apt install -yq --no-install-recommends linux-libc-dev:i386 gcc-12 gcc-12-multilib g++-12 g++-12-multilib > /dev/null
            sudo apt install -yq --no-install-recommends mariadb-client:i386 libmariadb-dev:i386
            export CC="gcc-12" && export CXX="g++-12"
            echo && echo "** Report building tools" && echo
            gcc -v -v && cmake --version && ninja --version
    - name: CMake
      run: |
            mkdir -p build
            cd build
            cmake -G "Ninja" -DCMAKE_BUILD_TYPE="Nightly" -DCMAKE_TOOLCHAIN_FILE=src/cmake/toolchains/Linux-GNU-x86.cmake -S ../ -B .
    - name: Ninja
      run: ninja
    - name: Create package
      run:  |
            mkdir accounts logs save scripts
            tar -czf SphereSvrX-linux32-nightly.tar.gz accounts/ logs/ save/ scripts/ -C bin/ SphereSvrX32_nightly -C ../src/ sphere.ini sphereCrypt.ini


  macos-x86_64:
    runs-on: macos-12
    env:
      CMAKE_GEN: Ninja
      CMAKE_TCH_64: src/cmake/toolchains/OSX-x86_64.cmake

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install prerequisites
      run:  |
            sw_vers
            echo && echo "** Setting up compiler" && echo
            export HOMEBREW_NO_AUTO_UPDATE=1
            export HOMEBREW_NO_INSTALL_CLEANUP=1
            brew install ninja mariadb-connector-c
            echo && echo "** Report building tools" && echo
            gcc -v && cmake --version && ninja --version
    - name: CMake
      run: |
            mkdir -p build
            cmake -G "Ninja" -DCMAKE_BUILD_TYPE="Nightly" -DCMAKE_TOOLCHAIN_FILE="$CMAKE_TCH_64" -S . -B ./build
    - name: Ninja
      run: cd build && ninja && cd ..
    - name: Create package
      run:  |
            pwd
            mkdir accounts logs save scripts
            zip -r SphereSvrX-osx-x86_64-nightly.zip accounts/ logs/ save/ scripts/
            zip SphereSvrX-osx-x86_64-nightly.zip src/sphere.ini src/sphereCrypt.ini build/bin64/*

    # only upload artifact in pull request or if is main/master branch
    - name: Upload artifact
      if: contains(fromJson('["master", "main"]'), github.ref_name) || ${{ github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Builds
        path: build/SphereSvrX-osx-x86_64-nightly.zip


  upload:
    needs: [windows-x86_64, windows-x86, linux-x86_64, linux-x86, macos-x86_64]
    if: contains(fromJson('["master", "main"]'), github.ref_name)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download builds
        uses: actions/download-artifact@v3
        with:
          name: Builds
      - name: Generate changelog
        run: git log --pretty=format:"%ad %an %s" --date=short > Git-Changelog.txt
      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Nightly
          tag_name: Nightly
          prerelease: true
          files: | 
                  Git-Changelog.txt
                  SphereSvrX-win64-nightly.zip
                  SphereSvrX-win32-nightly.zip
                  SphereSvrX-linux32-nightly.tar.gz
                  SphereSvrX-linux64-nightly.tar.gz
                  SphereSvrX-osx-x86_64-nightly.zip
