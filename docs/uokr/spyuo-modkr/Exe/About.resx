<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABkAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDwR3cyNh24J703e/8Afb86c5+diDzk5xTe2P1oAN7/AN9vzNG9
        /wC+350qnY6sVBwfumuntDazWInm0a0SMttWU7wZWHZVDZJ+nFAHL+Y/99vzo3v/AH2/Out8RXeg2xFt
        p+hRRXIUCaWSVmCt3Cr046c5rkSBnigBd7/32/OjzG/vt+dNNXdPu47K4EktpBdIcZjmUkEfgQfyoAqe
        Y399vzo3v/fb867u5vNEntra40/QtPto5AVlFxvdRJ/d35+UHqCfx6Vy+sSMbkxSadBZOnVIkK/1OR70
        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
</value>
  </data>
</root>