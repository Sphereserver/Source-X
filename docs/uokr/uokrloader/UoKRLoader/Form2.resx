<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>