<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>